{"ast":null,"code":"var _jsxFileName = \"C:\\\\HigherStudies\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Dropdown from './components/dropdown.js';\nimport { Navigate } from 'react-router-dom';\nimport ProfilePage from './StudentProfile.js';\nimport './App.css';\nimport image from './Assets/logo.png';\nimport Loginpage from './LoginPage.js';\nimport Signup from './Signup.js';\nimport InsertPage from './InsertPage.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedscore, setSelectedscore] = useState([]);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [dropdownData, setDropdownData] = useState({\n    years: [],\n    departments: [],\n    sections: [],\n    genders: [],\n    countries: [],\n    score: []\n  });\n  const [sortConfigs, setSortConfigs] = useState([]);\n  const dropdownRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('http://localhost:5002/api/data').then(response => {\n      const fetchedData = response.data;\n      setData(fetchedData);\n      setFilteredData(fetchedData);\n      const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\n      const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\n      const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\n      const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\n      const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\n      const allscore = fetchedData.flatMap(item => Object.keys(item.score || {}));\n      const uniquescore = [...new Set(allscore)];\n      setDropdownData({\n        years: uniqueYears,\n        departments: uniqueDepartments,\n        sections: uniqueSections,\n        genders: uniqueGenders,\n        countries: uniqueCountries,\n        score: uniquescore\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  useEffect(() => {\n    let filtered = data.filter(item => {\n      const scoreMatch = selectedscore.length === 0 || selectedscore.every(score => {\n        var _item$score;\n        return (_item$score = item.score) === null || _item$score === void 0 ? void 0 : _item$score[score];\n      });\n      const searchMatch = item.studentname.toLowerCase().includes(searchQuery.toLowerCase()) || item.studentid.toLowerCase().includes(searchQuery.toLowerCase()) || item.department.toLowerCase().includes(searchQuery.toLowerCase()) || item.section.toLowerCase().includes(searchQuery.toLowerCase()) || item.preferreddegree.toLowerCase().includes(searchQuery.toLowerCase()) || item.preferredcourse.toLowerCase().includes(searchQuery.toLowerCase()) || item.preferredcountry.toLowerCase().includes(searchQuery.toLowerCase());\n      return (!selectedYear || item.year === selectedYear) && (!selectedDepartment || item.department === selectedDepartment) && (!selectedSection || item.section === selectedSection) && (!selectedGender || item.gender === selectedGender) && (!selectedCountry || item.preferredcountry === selectedCountry) && scoreMatch && searchMatch;\n    });\n    if (sortConfigs.length > 0) {\n      filtered = filtered.sort((a, b) => {\n        for (const config of sortConfigs) {\n          var _a$score, _b$score;\n          const ascore = ((_a$score = a.score) === null || _a$score === void 0 ? void 0 : _a$score[config.key]) || 0;\n          const bscore = ((_b$score = b.score) === null || _b$score === void 0 ? void 0 : _b$score[config.key]) || 0;\n          if (ascore < bscore) {\n            return config.direction === 'ascending' ? -1 : 1;\n          }\n          if (ascore > bscore) {\n            return config.direction === 'ascending' ? 1 : -1;\n          }\n        }\n        return 0;\n      });\n    }\n    setFilteredData(filtered);\n  }, [selectedYear, selectedDepartment, selectedSection, selectedGender, selectedCountry, selectedscore, sortConfigs, data, searchQuery]);\n  const handleSelect = (type, selected) => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear(selectedYear === selected ? '' : selected);\n        break;\n      case 'Department':\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\n        break;\n      case 'Section':\n        setSelectedSection(selectedSection === selected ? '' : selected);\n        break;\n      case 'Gender':\n        setSelectedGender(selectedGender === selected ? '' : selected);\n        break;\n      case 'Preferred Country':\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\n        break;\n      case 'score':\n        if (selectedscore.includes(selected)) {\n          setSelectedscore(selectedscore.filter(score => score !== selected));\n        } else {\n          setSelectedscore([...selectedscore, selected]);\n        }\n        break;\n      default:\n        break;\n    }\n    toggleDropdown(type);\n  };\n  const getDropdownTitle = type => {\n    switch (type) {\n      case 'Year':\n        return selectedYear || 'Year';\n      case 'Department':\n        return selectedDepartment || 'Department';\n      case 'Section':\n        return selectedSection || 'Section';\n      case 'Gender':\n        return selectedGender || 'Gender';\n      case 'Preferred Country':\n        return selectedCountry || 'Preferred Country';\n      case 'Scores':\n        return selectedscore.length > 0 ? selectedscore.join(', ') : 'Scores';\n      default:\n        return '';\n    }\n  };\n  const getDropdownClass = type => {\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\n  };\n  const requestSort = key => {\n    let newSortConfigs = [...sortConfigs];\n    const existingConfigIndex = newSortConfigs.findIndex(config => config.key === key);\n    if (existingConfigIndex >= 0) {\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\n        newSortConfigs[existingConfigIndex].direction = 'descending';\n      } else {\n        newSortConfigs.splice(existingConfigIndex, 1);\n      }\n    } else {\n      newSortConfigs.push({\n        key,\n        direction: 'ascending'\n      });\n    }\n    setSortConfigs(newSortConfigs);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setOpenDropdown(null);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const getDropdownStyle = type => {\n    return getDropdownTitle(type) !== type ? {\n      backgroundColor: '#fff35e'\n    } : {};\n  };\n  const handleAddStudent = () => {\n    navigate('/insertpage');\n  };\n  const toggleDropdown = type => {\n    if (openDropdown === type) {\n      setOpenDropdown(null);\n    } else {\n      setOpenDropdown(type);\n    }\n  };\n  const resetDropdown = type => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear('');\n        break;\n      case 'Department':\n        setSelectedDepartment('');\n        break;\n      case 'Section':\n        setSelectedSection('');\n        break;\n      case 'Gender':\n        setSelectedGender('');\n        break;\n      case 'Preferred Country':\n        setSelectedCountry('');\n        break;\n      case 'score':\n        setSelectedscore([]);\n        break;\n      default:\n        break;\n    }\n    setOpenDropdown(null);\n  };\n  const handleRowClick = student => {\n    navigate('/profile', {\n      state: {\n        student\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Loginpage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/app\",\n      element: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Higher Studies Students Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          ref: dropdownRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterify\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Filter list by: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"params\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Year'),\n                items: dropdownData.years,\n                isOpen: openDropdown === 'Year',\n                toggleDropdown: () => toggleDropdown('Year'),\n                onSelect: selected => handleSelect('Year', selected),\n                resetDropdown: () => resetDropdown('Year'),\n                dropdownClass: getDropdownClass('Year'),\n                style: getDropdownStyle('Year')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Department'),\n                items: dropdownData.departments,\n                isOpen: openDropdown === 'Department',\n                toggleDropdown: () => toggleDropdown('Department'),\n                onSelect: selected => handleSelect('Department', selected),\n                resetDropdown: () => resetDropdown('Department'),\n                dropdownClass: getDropdownClass('Department'),\n                style: getDropdownStyle('Department')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Section'),\n                items: dropdownData.sections,\n                isOpen: openDropdown === 'Section',\n                toggleDropdown: () => toggleDropdown('Section'),\n                onSelect: selected => handleSelect('Section', selected),\n                resetDropdown: () => resetDropdown('Section'),\n                dropdownClass: getDropdownClass('Section'),\n                style: getDropdownStyle('Section')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Gender'),\n                items: dropdownData.genders,\n                isOpen: openDropdown === 'Gender',\n                toggleDropdown: () => toggleDropdown('Gender'),\n                onSelect: selected => handleSelect('Gender', selected),\n                resetDropdown: () => resetDropdown('Gender'),\n                dropdownClass: getDropdownClass('Gender'),\n                style: getDropdownStyle('Gender')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Preferred Country'),\n                items: dropdownData.countries,\n                isOpen: openDropdown === 'Preferred Country',\n                toggleDropdown: () => toggleDropdown('Preferred Country'),\n                onSelect: selected => handleSelect('Preferred Country', selected),\n                resetDropdown: () => resetDropdown('Preferred Country'),\n                dropdownClass: getDropdownClass('Preferred Country'),\n                style: getDropdownStyle('Preferred Country')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                buttonField: getDropdownTitle('Scores'),\n                items: dropdownData.score,\n                isOpen: openDropdown === 'score',\n                toggleDropdown: () => toggleDropdown('score'),\n                onSelect: selected => handleSelect('score', selected),\n                resetDropdown: () => resetDropdown('score'),\n                dropdownClass: getDropdownClass('score'),\n                style: getDropdownStyle('score')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-student\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"addstudent-button\",\n              onClick: handleAddStudent,\n              children: \"Add Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"glow-button\",\n                onClick: handleStartStreamlit,\n                children: \"Chat with Kutty AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search name, id, Department...\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('studentname'),\n              children: \"S.no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('studentname'),\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('studentid'),\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('department'),\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('section'),\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('preferreddegree'),\n              children: \"Preferred Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('preferredcourse'),\n              children: \"Preferred Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => requestSort('preferredcountry'),\n              children: \"Preferred Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), selectedscore.map(score => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sortable-header\",\n              onClick: () => requestSort(score),\n              children: score\n            }, score, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scrollable-list\",\n            children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-item\",\n              onClick: () => handleRowClick(item),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"student-name\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"student-name\",\n                children: item.studentname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"student-name\",\n                children: item.studentid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.section\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.preferreddegree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.preferredcourse\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.preferredcountry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), selectedscore.map(score => {\n                var _item$score2;\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: ((_item$score2 = item.score) === null || _item$score2 === void 0 ? void 0 : _item$score2[score]) || '-'\n                }, score, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Broadcast Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Send a broadcast message to all filtered students instantly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"glow\",\n              children: \"Send Broadcast Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/insertpage\",\n      element: /*#__PURE__*/_jsxDEV(InsertPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile\",\n      element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KLPxW4KRg2c67CCRrSKq8QpRCoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Route","Routes","useNavigate","Dropdown","Navigate","ProfilePage","image","Loginpage","Signup","InsertPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","searchQuery","setSearchQuery","openDropdown","setOpenDropdown","selectedYear","setSelectedYear","selectedDepartment","setSelectedDepartment","selectedSection","setSelectedSection","selectedGender","setSelectedGender","selectedCountry","setSelectedCountry","selectedscore","setSelectedscore","data","setData","filteredData","setFilteredData","dropdownData","setDropdownData","years","departments","sections","genders","countries","score","sortConfigs","setSortConfigs","dropdownRef","navigate","get","then","response","fetchedData","uniqueYears","Set","map","item","year","uniqueDepartments","department","uniqueSections","section","uniqueGenders","gender","uniqueCountries","preferredcountry","allscore","flatMap","Object","keys","uniquescore","catch","error","console","filtered","filter","scoreMatch","length","every","_item$score","searchMatch","studentname","toLowerCase","includes","studentid","preferreddegree","preferredcourse","sort","a","b","config","_a$score","_b$score","ascore","key","bscore","direction","handleSelect","type","selected","toggleDropdown","getDropdownTitle","join","getDropdownClass","requestSort","newSortConfigs","existingConfigIndex","findIndex","splice","push","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDropdownStyle","backgroundColor","handleAddStudent","resetDropdown","handleRowClick","student","state","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","ref","buttonField","items","isOpen","onSelect","dropdownClass","style","onClick","handleStartStreamlit","placeholder","value","onChange","e","index","_item$score2","_id","to","_c","$RefreshReg$"],"sources":["C:/HigherStudies/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport Dropdown from './components/dropdown.js';\r\nimport { Navigate } from 'react-router-dom';\r\nimport ProfilePage from './StudentProfile.js';\r\nimport './App.css';\r\nimport image from './Assets/logo.png';\r\nimport Loginpage from './LoginPage.js';\r\nimport Signup from './Signup.js';\r\nimport InsertPage from './InsertPage.js';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedGender, setSelectedGender] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedscore, setSelectedscore] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [dropdownData, setDropdownData] = useState({\r\n    years: [],\r\n    departments: [],\r\n    sections: [],\r\n    genders: [],\r\n    countries: [],\r\n    score: [],\r\n  });\r\n  const [sortConfigs, setSortConfigs] = useState([]);\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5002/api/data')\r\n      .then((response) => {\r\n        const fetchedData = response.data;\r\n        setData(fetchedData);\r\n        setFilteredData(fetchedData);\r\n\r\n        const uniqueYears = [...new Set(fetchedData.map((item) => item.year))];\r\n        const uniqueDepartments = [...new Set(fetchedData.map((item) => item.department))];\r\n        const uniqueSections = [...new Set(fetchedData.map((item) => item.section))];\r\n        const uniqueGenders = [...new Set(fetchedData.map((item) => item.gender))];\r\n        const uniqueCountries = [...new Set(fetchedData.map((item) => item.preferredcountry))];\r\n        const allscore = fetchedData.flatMap((item) => Object.keys(item.score || {}));\r\n        const uniquescore = [...new Set(allscore)];\r\n\r\n        setDropdownData({\r\n          years: uniqueYears,\r\n          departments: uniqueDepartments,\r\n          sections: uniqueSections,\r\n          genders: uniqueGenders,\r\n          countries: uniqueCountries,\r\n          score: uniquescore,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = data.filter((item) => {\r\n      const scoreMatch = selectedscore.length === 0 || selectedscore.every((score) => item.score?.[score]);\r\n      const searchMatch =\r\n      item.studentname.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.studentid.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.department.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.section.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.preferreddegree.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.preferredcourse.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      item.preferredcountry.toLowerCase().includes(searchQuery.toLowerCase());\r\n\r\n      return (\r\n        (!selectedYear || item.year === selectedYear) &&\r\n        (!selectedDepartment || item.department === selectedDepartment) &&\r\n        (!selectedSection || item.section === selectedSection) &&\r\n        (!selectedGender || item.gender === selectedGender) &&\r\n        (!selectedCountry || item.preferredcountry === selectedCountry) &&\r\n        scoreMatch && searchMatch\r\n      );\r\n    });\r\n\r\n    if (sortConfigs.length > 0) {\r\n      filtered = filtered.sort((a, b) => {\r\n        for (const config of sortConfigs) {\r\n          const ascore = a.score?.[config.key] || 0;\r\n          const bscore = b.score?.[config.key] || 0;\r\n\r\n          if (ascore < bscore) {\r\n            return config.direction === 'ascending' ? -1 : 1;\r\n          }\r\n          if (ascore > bscore) {\r\n            return config.direction === 'ascending' ? 1 : -1;\r\n          }\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n  }, [\r\n    selectedYear,\r\n    selectedDepartment,\r\n    selectedSection,\r\n    selectedGender,\r\n    selectedCountry,\r\n    selectedscore,\r\n    sortConfigs,\r\n    data, searchQuery\r\n  ]);\r\n\r\n  const handleSelect = (type, selected) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear(selectedYear === selected ? '' : selected);\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection(selectedSection === selected ? '' : selected);\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender(selectedGender === selected ? '' : selected);\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\r\n        break;\r\n      case 'score':\r\n        if (selectedscore.includes(selected)) {\r\n          setSelectedscore(selectedscore.filter((score) => score !== selected));\r\n        } else {\r\n          setSelectedscore([...selectedscore, selected]);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    toggleDropdown(type);\r\n  };\r\n\r\n  const getDropdownTitle = (type) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        return selectedYear || 'Year';\r\n      case 'Department':\r\n        return selectedDepartment || 'Department';\r\n      case 'Section':\r\n        return selectedSection || 'Section';\r\n      case 'Gender':\r\n        return selectedGender || 'Gender';\r\n      case 'Preferred Country':\r\n        return selectedCountry || 'Preferred Country';\r\n      case 'Scores':\r\n        return selectedscore.length > 0 ? selectedscore.join(', ') : 'Scores';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getDropdownClass = (type) => {\r\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\r\n  };\r\n\r\n  const requestSort = (key) => {\r\n    let newSortConfigs = [...sortConfigs];\r\n    const existingConfigIndex = newSortConfigs.findIndex((config) => config.key === key);\r\n\r\n    if (existingConfigIndex >= 0) {\r\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\r\n        newSortConfigs[existingConfigIndex].direction = 'descending';\r\n      } else {\r\n        newSortConfigs.splice(existingConfigIndex, 1);\r\n      }\r\n    } else {\r\n      newSortConfigs.push({ key, direction: 'ascending' });\r\n    }\r\n\r\n    setSortConfigs(newSortConfigs);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setOpenDropdown(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const getDropdownStyle = (type) => {\r\n    return getDropdownTitle(type) !== type ? { backgroundColor: '#fff35e' } : {};\r\n  };\r\n  const handleAddStudent=()=>{\r\n    navigate('/insertpage')\r\n  }\r\n  const toggleDropdown = (type) => {\r\n    if (openDropdown === type) {\r\n      setOpenDropdown(null);\r\n    } else {\r\n      setOpenDropdown(type);\r\n    }\r\n  };\r\n\r\n  const resetDropdown = (type) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear('');\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment('');\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection('');\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender('');\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry('');\r\n        break;\r\n      case 'score':\r\n        setSelectedscore([]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setOpenDropdown(null);\r\n  };\r\n\r\n  const handleRowClick = (student) => {\r\n\r\n    navigate('/profile', { state: { student } });\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Loginpage />} />\r\n      <Route path=\"/signup\" element={<Signup />}/>\r\n      <Route\r\n\r\n        path=\"/app\"\r\n        element={\r\n          <>\r\n            <div className=\"header\">\r\n              <img src={image} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"title\">\r\n              <h2>Higher Studies Students Data</h2>\r\n            </div>\r\n            <div className=\"filter\" ref={dropdownRef}>\r\n              <div className=\"filterify\">\r\n                <h4>Filter list by: </h4>\r\n                <div className=\"params\">\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Year')}\r\n                    items={dropdownData.years}\r\n                    isOpen={openDropdown === 'Year'}\r\n                    toggleDropdown={() => toggleDropdown('Year')}\r\n                    onSelect={(selected) => handleSelect('Year', selected)}\r\n                    resetDropdown={() => resetDropdown('Year')}\r\n                    dropdownClass={getDropdownClass('Year')}\r\n                    style={getDropdownStyle('Year')}\r\n                  />\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Department')}\r\n                    items={dropdownData.departments}\r\n                    isOpen={openDropdown === 'Department'}\r\n                    toggleDropdown={() => toggleDropdown('Department')}\r\n                    onSelect={(selected) => handleSelect('Department', selected)}\r\n                    resetDropdown={() => resetDropdown('Department')}\r\n                    dropdownClass={getDropdownClass('Department')}\r\n                    style={getDropdownStyle('Department')}\r\n                  />\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Section')}\r\n                    items={dropdownData.sections}\r\n                    isOpen={openDropdown === 'Section'}\r\n                    toggleDropdown={() => toggleDropdown('Section')}\r\n                    onSelect={(selected) => handleSelect('Section', selected)}\r\n                    resetDropdown={() => resetDropdown('Section')}\r\n                    dropdownClass={getDropdownClass('Section')}\r\n                    style={getDropdownStyle('Section')}\r\n                  />\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Gender')}\r\n                    items={dropdownData.genders}\r\n                    isOpen={openDropdown === 'Gender'}\r\n                    toggleDropdown={() => toggleDropdown('Gender')}\r\n                    onSelect={(selected) => handleSelect('Gender', selected)}\r\n                    resetDropdown={() => resetDropdown('Gender')}\r\n                    dropdownClass={getDropdownClass('Gender')}\r\n                    style={getDropdownStyle('Gender')}\r\n                  />\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Preferred Country')}\r\n                    items={dropdownData.countries}\r\n                    isOpen={openDropdown === 'Preferred Country'}\r\n                    toggleDropdown={() => toggleDropdown('Preferred Country')}\r\n                    onSelect={(selected) => handleSelect('Preferred Country', selected)}\r\n                    resetDropdown={() => resetDropdown('Preferred Country')}\r\n                    dropdownClass={getDropdownClass('Preferred Country')}\r\n                    style={getDropdownStyle('Preferred Country')}\r\n                  />\r\n                  <Dropdown\r\n                    buttonField={getDropdownTitle('Scores')}\r\n                    items={dropdownData.score}\r\n                    isOpen={openDropdown === 'score'}\r\n                    toggleDropdown={() => toggleDropdown('score')}\r\n                    onSelect={(selected) => handleSelect('score', selected)}\r\n                    resetDropdown={() => resetDropdown('score')}\r\n                    dropdownClass={getDropdownClass('score')}\r\n                    style={getDropdownStyle('score')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='filter2'>\r\n              <div className='add-student'>\r\n                <button className='addstudent-button' onClick={handleAddStudent}>Add Student</button>\r\n              </div>\r\n              <div className='buttons'>\r\n                <div className='button-container'>\r\n                  <button className='glow-button' onClick={handleStartStreamlit}>Chat with Kutty AI</button>\r\n                </div>\r\n                <div className=\"search-bar\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search name, id, Department...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-container\">\r\n              <div className=\"table-header\">\r\n              <span onClick={() => requestSort('studentname')}>\r\n                  S.no\r\n                </span>\r\n                <span onClick={() => requestSort('studentname')}>\r\n                  Name\r\n                </span>\r\n                <span onClick={() => requestSort('studentid')}>\r\n                  ID\r\n                </span>\r\n                <span  onClick={() => requestSort('department')}>\r\n                  Department\r\n                </span>\r\n                <span onClick={() => requestSort('section')}>\r\n                  Section\r\n                </span>\r\n                <span  onClick={() => requestSort('preferreddegree')}>\r\n                  Preferred Degree\r\n                </span>\r\n                <span onClick={() => requestSort('preferredcourse')}>\r\n                  Preferred Course\r\n                </span>\r\n                <span  onClick={() => requestSort('preferredcountry')}>\r\n                  Preferred Country\r\n                </span>\r\n                {selectedscore.map((score) => (\r\n                  <span key={score} className=\"sortable-header\" onClick={() => requestSort(score)}>\r\n                    {score}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"scrollable-list\">\r\n                {filteredData.map((item, index) => (\r\n                  <div\r\n                    className=\"list-item\"\r\n                    key={item._id}\r\n                    onClick={() => handleRowClick(item)}\r\n                  >\r\n                    <span className='student-name'>{index + 1}</span>\r\n                    <span className='student-name'>{item.studentname}</span>\r\n                    <span className='student-name'>{item.studentid}</span>\r\n                    <span>{item.department}</span>\r\n                    <span>{item.section}</span>\r\n                    <span>{item.preferreddegree}</span>\r\n                    <span>{item.preferredcourse}</span>\r\n                    <span>{item.preferredcountry}</span>\r\n                    {selectedscore.map((score) => (\r\n                      <span key={score}>{item.score?.[score] || '-'}</span>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n            </div>\r\n            <div className='footer'>\r\n        <h4>Broadcast Message</h4>\r\n        <p>Send a broadcast message to all filtered students instantly.</p>\r\n        <div className='button-container'>\r\n            <button className='glow'>Send Broadcast Message</button>\r\n        </div>\r\n      </div>\r\n          </>\r\n        }\r\n      />\r\n      <Route path=\"/insertpage\" element={<InsertPage />}/>\r\n      <Route path=\"/profile\" element={<ProfilePage />} />\r\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC;IAC/CyC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMiD,WAAW,GAAGhD,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMiD,QAAQ,GAAG7C,WAAW,CAAC,CAAC;EAE9BN,SAAS,CAAC,MAAM;IACdG,KAAK,CACFiD,GAAG,CAAC,gCAAgC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,WAAW,GAAGD,QAAQ,CAAClB,IAAI;MACjCC,OAAO,CAACkB,WAAW,CAAC;MACpBhB,eAAe,CAACgB,WAAW,CAAC;MAE5B,MAAMC,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,WAAW,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACtE,MAAMC,iBAAiB,GAAG,CAAC,GAAG,IAAIJ,GAAG,CAACF,WAAW,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,UAAU,CAAC,CAAC,CAAC;MAClF,MAAMC,cAAc,GAAG,CAAC,GAAG,IAAIN,GAAG,CAACF,WAAW,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC;MAC5E,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAIR,GAAG,CAACF,WAAW,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACO,MAAM,CAAC,CAAC,CAAC;MAC1E,MAAMC,eAAe,GAAG,CAAC,GAAG,IAAIV,GAAG,CAACF,WAAW,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACS,gBAAgB,CAAC,CAAC,CAAC;MACtF,MAAMC,QAAQ,GAAGd,WAAW,CAACe,OAAO,CAAEX,IAAI,IAAKY,MAAM,CAACC,IAAI,CAACb,IAAI,CAACZ,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7E,MAAM0B,WAAW,GAAG,CAAC,GAAG,IAAIhB,GAAG,CAACY,QAAQ,CAAC,CAAC;MAE1C5B,eAAe,CAAC;QACdC,KAAK,EAAEc,WAAW;QAClBb,WAAW,EAAEkB,iBAAiB;QAC9BjB,QAAQ,EAAEmB,cAAc;QACxBlB,OAAO,EAAEoB,aAAa;QACtBnB,SAAS,EAAEqB,eAAe;QAC1BpB,KAAK,EAAE0B;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN3E,SAAS,CAAC,MAAM;IACd,IAAI6E,QAAQ,GAAGzC,IAAI,CAAC0C,MAAM,CAAEnB,IAAI,IAAK;MACnC,MAAMoB,UAAU,GAAG7C,aAAa,CAAC8C,MAAM,KAAK,CAAC,IAAI9C,aAAa,CAAC+C,KAAK,CAAElC,KAAK;QAAA,IAAAmC,WAAA;QAAA,QAAAA,WAAA,GAAKvB,IAAI,CAACZ,KAAK,cAAAmC,WAAA,uBAAVA,WAAA,CAAanC,KAAK,CAAC;MAAA,EAAC;MACpG,MAAMoC,WAAW,GACjBxB,IAAI,CAACyB,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IAClE1B,IAAI,CAAC4B,SAAS,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IAChE1B,IAAI,CAACG,UAAU,CAACuB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IACjE1B,IAAI,CAACK,OAAO,CAACqB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IAC9D1B,IAAI,CAAC6B,eAAe,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IACtE1B,IAAI,CAAC8B,eAAe,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC,IACtE1B,IAAI,CAACS,gBAAgB,CAACiB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClE,WAAW,CAACiE,WAAW,CAAC,CAAC,CAAC;MAEvE,OACE,CAAC,CAAC7D,YAAY,IAAImC,IAAI,CAACC,IAAI,KAAKpC,YAAY,MAC3C,CAACE,kBAAkB,IAAIiC,IAAI,CAACG,UAAU,KAAKpC,kBAAkB,CAAC,KAC9D,CAACE,eAAe,IAAI+B,IAAI,CAACK,OAAO,KAAKpC,eAAe,CAAC,KACrD,CAACE,cAAc,IAAI6B,IAAI,CAACO,MAAM,KAAKpC,cAAc,CAAC,KAClD,CAACE,eAAe,IAAI2B,IAAI,CAACS,gBAAgB,KAAKpC,eAAe,CAAC,IAC/D+C,UAAU,IAAII,WAAW;IAE7B,CAAC,CAAC;IAEF,IAAInC,WAAW,CAACgC,MAAM,GAAG,CAAC,EAAE;MAC1BH,QAAQ,GAAGA,QAAQ,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjC,KAAK,MAAMC,MAAM,IAAI7C,WAAW,EAAE;UAAA,IAAA8C,QAAA,EAAAC,QAAA;UAChC,MAAMC,MAAM,GAAG,EAAAF,QAAA,GAAAH,CAAC,CAAC5C,KAAK,cAAA+C,QAAA,uBAAPA,QAAA,CAAUD,MAAM,CAACI,GAAG,CAAC,KAAI,CAAC;UACzC,MAAMC,MAAM,GAAG,EAAAH,QAAA,GAAAH,CAAC,CAAC7C,KAAK,cAAAgD,QAAA,uBAAPA,QAAA,CAAUF,MAAM,CAACI,GAAG,CAAC,KAAI,CAAC;UAEzC,IAAID,MAAM,GAAGE,MAAM,EAAE;YACnB,OAAOL,MAAM,CAACM,SAAS,KAAK,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC;UAClD;UACA,IAAIH,MAAM,GAAGE,MAAM,EAAE;YACnB,OAAOL,MAAM,CAACM,SAAS,KAAK,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;UAClD;QACF;QACA,OAAO,CAAC;MACV,CAAC,CAAC;IACJ;IAEA5D,eAAe,CAACsC,QAAQ,CAAC;EAC3B,CAAC,EAAE,CACDrD,YAAY,EACZE,kBAAkB,EAClBE,eAAe,EACfE,cAAc,EACdE,eAAe,EACfE,aAAa,EACbc,WAAW,EACXZ,IAAI,EAAEhB,WAAW,CAClB,CAAC;EAEF,MAAMgF,YAAY,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACvC,QAAQD,IAAI;MACV,KAAK,MAAM;QACT5E,eAAe,CAACD,YAAY,KAAK8E,QAAQ,GAAG,EAAE,GAAGA,QAAQ,CAAC;QAC1D;MACF,KAAK,YAAY;QACf3E,qBAAqB,CAACD,kBAAkB,KAAK4E,QAAQ,GAAG,EAAE,GAAGA,QAAQ,CAAC;QACtE;MACF,KAAK,SAAS;QACZzE,kBAAkB,CAACD,eAAe,KAAK0E,QAAQ,GAAG,EAAE,GAAGA,QAAQ,CAAC;QAChE;MACF,KAAK,QAAQ;QACXvE,iBAAiB,CAACD,cAAc,KAAKwE,QAAQ,GAAG,EAAE,GAAGA,QAAQ,CAAC;QAC9D;MACF,KAAK,mBAAmB;QACtBrE,kBAAkB,CAACD,eAAe,KAAKsE,QAAQ,GAAG,EAAE,GAAGA,QAAQ,CAAC;QAChE;MACF,KAAK,OAAO;QACV,IAAIpE,aAAa,CAACoD,QAAQ,CAACgB,QAAQ,CAAC,EAAE;UACpCnE,gBAAgB,CAACD,aAAa,CAAC4C,MAAM,CAAE/B,KAAK,IAAKA,KAAK,KAAKuD,QAAQ,CAAC,CAAC;QACvE,CAAC,MAAM;UACLnE,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEoE,QAAQ,CAAC,CAAC;QAChD;QACA;MACF;QACE;IACJ;IACAC,cAAc,CAACF,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,gBAAgB,GAAIH,IAAI,IAAK;IACjC,QAAQA,IAAI;MACV,KAAK,MAAM;QACT,OAAO7E,YAAY,IAAI,MAAM;MAC/B,KAAK,YAAY;QACf,OAAOE,kBAAkB,IAAI,YAAY;MAC3C,KAAK,SAAS;QACZ,OAAOE,eAAe,IAAI,SAAS;MACrC,KAAK,QAAQ;QACX,OAAOE,cAAc,IAAI,QAAQ;MACnC,KAAK,mBAAmB;QACtB,OAAOE,eAAe,IAAI,mBAAmB;MAC/C,KAAK,QAAQ;QACX,OAAOE,aAAa,CAAC8C,MAAM,GAAG,CAAC,GAAG9C,aAAa,CAACuE,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ;MACvE;QACE,OAAO,EAAE;IACb;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIL,IAAI,IAAK;IACjC,OAAOG,gBAAgB,CAACH,IAAI,CAAC,KAAKA,IAAI,GAAG,sBAAsB,GAAG,EAAE;EACtE,CAAC;EAED,MAAMM,WAAW,GAAIV,GAAG,IAAK;IAC3B,IAAIW,cAAc,GAAG,CAAC,GAAG5D,WAAW,CAAC;IACrC,MAAM6D,mBAAmB,GAAGD,cAAc,CAACE,SAAS,CAAEjB,MAAM,IAAKA,MAAM,CAACI,GAAG,KAAKA,GAAG,CAAC;IAEpF,IAAIY,mBAAmB,IAAI,CAAC,EAAE;MAC5B,IAAID,cAAc,CAACC,mBAAmB,CAAC,CAACV,SAAS,KAAK,WAAW,EAAE;QACjES,cAAc,CAACC,mBAAmB,CAAC,CAACV,SAAS,GAAG,YAAY;MAC9D,CAAC,MAAM;QACLS,cAAc,CAACG,MAAM,CAACF,mBAAmB,EAAE,CAAC,CAAC;MAC/C;IACF,CAAC,MAAM;MACLD,cAAc,CAACI,IAAI,CAAC;QAAEf,GAAG;QAAEE,SAAS,EAAE;MAAY,CAAC,CAAC;IACtD;IAEAlD,cAAc,CAAC2D,cAAc,CAAC;EAChC,CAAC;EAED,MAAMK,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIhE,WAAW,CAACiE,OAAO,IAAI,CAACjE,WAAW,CAACiE,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MACtE9F,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdsH,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAIpB,IAAI,IAAK;IACjC,OAAOG,gBAAgB,CAACH,IAAI,CAAC,KAAKA,IAAI,GAAG;MAAEqB,eAAe,EAAE;IAAU,CAAC,GAAG,CAAC,CAAC;EAC9E,CAAC;EACD,MAAMC,gBAAgB,GAACA,CAAA,KAAI;IACzBxE,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EACD,MAAMoD,cAAc,GAAIF,IAAI,IAAK;IAC/B,IAAI/E,YAAY,KAAK+E,IAAI,EAAE;MACzB9E,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLA,eAAe,CAAC8E,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMuB,aAAa,GAAIvB,IAAI,IAAK;IAC9B,QAAQA,IAAI;MACV,KAAK,MAAM;QACT5E,eAAe,CAAC,EAAE,CAAC;QACnB;MACF,KAAK,YAAY;QACfE,qBAAqB,CAAC,EAAE,CAAC;QACzB;MACF,KAAK,SAAS;QACZE,kBAAkB,CAAC,EAAE,CAAC;QACtB;MACF,KAAK,QAAQ;QACXE,iBAAiB,CAAC,EAAE,CAAC;QACrB;MACF,KAAK,mBAAmB;QACtBE,kBAAkB,CAAC,EAAE,CAAC;QACtB;MACF,KAAK,OAAO;QACVE,gBAAgB,CAAC,EAAE,CAAC;QACpB;MACF;QACE;IACJ;IACAZ,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMsG,cAAc,GAAIC,OAAO,IAAK;IAElC3E,QAAQ,CAAC,UAAU,EAAE;MAAE4E,KAAK,EAAE;QAAED;MAAQ;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,oBACE/G,OAAA,CAACV,MAAM;IAAA2H,QAAA,gBACLjH,OAAA,CAACX,KAAK;MAAC6H,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEnH,OAAA,CAACJ,SAAS;QAAAwH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CvH,OAAA,CAACX,KAAK;MAAC6H,IAAI,EAAC,SAAS;MAACC,OAAO,eAAEnH,OAAA,CAACH,MAAM;QAAAuH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5CvH,OAAA,CAACX,KAAK;MAEJ6H,IAAI,EAAC,MAAM;MACXC,OAAO,eACLnH,OAAA,CAAAE,SAAA;QAAA+G,QAAA,gBACEjH,OAAA;UAAKwH,SAAS,EAAC,QAAQ;UAAAP,QAAA,eACrBjH,OAAA;YAAKyH,GAAG,EAAE9H,KAAM;YAAC+H,GAAG,EAAC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACNvH,OAAA;UAAKwH,SAAS,EAAC,OAAO;UAAAP,QAAA,eACpBjH,OAAA;YAAAiH,QAAA,EAAI;UAA4B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACNvH,OAAA;UAAKwH,SAAS,EAAC,QAAQ;UAACG,GAAG,EAAExF,WAAY;UAAA8E,QAAA,eACvCjH,OAAA;YAAKwH,SAAS,EAAC,WAAW;YAAAP,QAAA,gBACxBjH,OAAA;cAAAiH,QAAA,EAAI;YAAgB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBvH,OAAA;cAAKwH,SAAS,EAAC,QAAQ;cAAAP,QAAA,gBACrBjH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,MAAM,CAAE;gBACtCoC,KAAK,EAAEpG,YAAY,CAACE,KAAM;gBAC1BmG,MAAM,EAAEvH,YAAY,KAAK,MAAO;gBAChCiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,MAAM,CAAE;gBAC7CuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,MAAM,EAAEE,QAAQ,CAAE;gBACvDsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,MAAM,CAAE;gBAC3CmB,aAAa,EAAErC,gBAAgB,CAAC,MAAM,CAAE;gBACxCsC,KAAK,EAAEvB,gBAAgB,CAAC,MAAM;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC,CAAC,eACFvH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,YAAY,CAAE;gBAC5CoC,KAAK,EAAEpG,YAAY,CAACG,WAAY;gBAChCkG,MAAM,EAAEvH,YAAY,KAAK,YAAa;gBACtCiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,YAAY,CAAE;gBACnDuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,YAAY,EAAEE,QAAQ,CAAE;gBAC7DsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,YAAY,CAAE;gBACjDmB,aAAa,EAAErC,gBAAgB,CAAC,YAAY,CAAE;gBAC9CsC,KAAK,EAAEvB,gBAAgB,CAAC,YAAY;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC,eACFvH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,SAAS,CAAE;gBACzCoC,KAAK,EAAEpG,YAAY,CAACI,QAAS;gBAC7BiG,MAAM,EAAEvH,YAAY,KAAK,SAAU;gBACnCiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,SAAS,CAAE;gBAChDuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,SAAS,EAAEE,QAAQ,CAAE;gBAC1DsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,SAAS,CAAE;gBAC9CmB,aAAa,EAAErC,gBAAgB,CAAC,SAAS,CAAE;gBAC3CsC,KAAK,EAAEvB,gBAAgB,CAAC,SAAS;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,eACFvH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,QAAQ,CAAE;gBACxCoC,KAAK,EAAEpG,YAAY,CAACK,OAAQ;gBAC5BgG,MAAM,EAAEvH,YAAY,KAAK,QAAS;gBAClCiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,QAAQ,CAAE;gBAC/CuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,QAAQ,EAAEE,QAAQ,CAAE;gBACzDsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,QAAQ,CAAE;gBAC7CmB,aAAa,EAAErC,gBAAgB,CAAC,QAAQ,CAAE;gBAC1CsC,KAAK,EAAEvB,gBAAgB,CAAC,QAAQ;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,eACFvH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,mBAAmB,CAAE;gBACnDoC,KAAK,EAAEpG,YAAY,CAACM,SAAU;gBAC9B+F,MAAM,EAAEvH,YAAY,KAAK,mBAAoB;gBAC7CiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,mBAAmB,CAAE;gBAC1DuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,mBAAmB,EAAEE,QAAQ,CAAE;gBACpEsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,mBAAmB,CAAE;gBACxDmB,aAAa,EAAErC,gBAAgB,CAAC,mBAAmB,CAAE;gBACrDsC,KAAK,EAAEvB,gBAAgB,CAAC,mBAAmB;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACFvH,OAAA,CAACR,QAAQ;gBACPoI,WAAW,EAAEnC,gBAAgB,CAAC,QAAQ,CAAE;gBACxCoC,KAAK,EAAEpG,YAAY,CAACO,KAAM;gBAC1B8F,MAAM,EAAEvH,YAAY,KAAK,OAAQ;gBACjCiF,cAAc,EAAEA,CAAA,KAAMA,cAAc,CAAC,OAAO,CAAE;gBAC9CuC,QAAQ,EAAGxC,QAAQ,IAAKF,YAAY,CAAC,OAAO,EAAEE,QAAQ,CAAE;gBACxDsB,aAAa,EAAEA,CAAA,KAAMA,aAAa,CAAC,OAAO,CAAE;gBAC5CmB,aAAa,EAAErC,gBAAgB,CAAC,OAAO,CAAE;gBACzCsC,KAAK,EAAEvB,gBAAgB,CAAC,OAAO;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNvH,OAAA;UAAKwH,SAAS,EAAC,SAAS;UAAAP,QAAA,gBACtBjH,OAAA;YAAKwH,SAAS,EAAC,aAAa;YAAAP,QAAA,eAC1BjH,OAAA;cAAQwH,SAAS,EAAC,mBAAmB;cAACU,OAAO,EAAEtB,gBAAiB;cAAAK,QAAA,EAAC;YAAW;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC,eACNvH,OAAA;YAAKwH,SAAS,EAAC,SAAS;YAAAP,QAAA,gBACtBjH,OAAA;cAAKwH,SAAS,EAAC,kBAAkB;cAAAP,QAAA,eAC/BjH,OAAA;gBAAQwH,SAAS,EAAC,aAAa;gBAACU,OAAO,EAAEC,oBAAqB;gBAAAlB,QAAA,EAAC;cAAkB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvF,CAAC,eACNvH,OAAA;cAAKwH,SAAS,EAAC,YAAY;cAAAP,QAAA,gBACzBjH,OAAA;gBACEsF,IAAI,EAAC,MAAM;gBACX8C,WAAW,EAAC,gCAAgC;gBAC5CC,KAAK,EAAEhI,WAAY;gBACnBiI,QAAQ,EAAGC,CAAC,IAAKjI,cAAc,CAACiI,CAAC,CAACjC,MAAM,CAAC+B,KAAK;cAAE;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC,4CACJ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNvH,OAAA;UAAKwH,SAAS,EAAC,iBAAiB;UAAAP,QAAA,gBAC9BjH,OAAA;YAAKwH,SAAS,EAAC,cAAc;YAAAP,QAAA,gBAC7BjH,OAAA;cAAMkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,aAAa,CAAE;cAAAqB,QAAA,EAAC;YAE/C;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAMkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,aAAa,CAAE;cAAAqB,QAAA,EAAC;YAEjD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAMkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,WAAW,CAAE;cAAAqB,QAAA,EAAC;YAE/C;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAOkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,YAAY,CAAE;cAAAqB,QAAA,EAAC;YAEjD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAMkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,SAAS,CAAE;cAAAqB,QAAA,EAAC;YAE7C;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAOkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,iBAAiB,CAAE;cAAAqB,QAAA,EAAC;YAEtD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAMkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,iBAAiB,CAAE;cAAAqB,QAAA,EAAC;YAErD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPvH,OAAA;cAAOkI,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC,kBAAkB,CAAE;cAAAqB,QAAA,EAAC;YAEvD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACNpG,aAAa,CAACwB,GAAG,CAAEX,KAAK,iBACvBhC,OAAA;cAAkBwH,SAAS,EAAC,iBAAiB;cAACU,OAAO,EAAEA,CAAA,KAAMtC,WAAW,CAAC5D,KAAK,CAAE;cAAAiF,QAAA,EAC7EjF;YAAK,GADGA,KAAK;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNvH,OAAA;YAAKwH,SAAS,EAAC,iBAAiB;YAAAP,QAAA,EAC7B1F,YAAY,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAE4F,KAAK,kBAC5BxI,OAAA;cACEwH,SAAS,EAAC,WAAW;cAErBU,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAAClE,IAAI,CAAE;cAAAqE,QAAA,gBAEpCjH,OAAA;gBAAMwH,SAAS,EAAC,cAAc;gBAAAP,QAAA,EAAEuB,KAAK,GAAG;cAAC;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjDvH,OAAA;gBAAMwH,SAAS,EAAC,cAAc;gBAAAP,QAAA,EAAErE,IAAI,CAACyB;cAAW;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACxDvH,OAAA;gBAAMwH,SAAS,EAAC,cAAc;gBAAAP,QAAA,EAAErE,IAAI,CAAC4B;cAAS;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtDvH,OAAA;gBAAAiH,QAAA,EAAOrE,IAAI,CAACG;cAAU;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9BvH,OAAA;gBAAAiH,QAAA,EAAOrE,IAAI,CAACK;cAAO;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3BvH,OAAA;gBAAAiH,QAAA,EAAOrE,IAAI,CAAC6B;cAAe;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACnCvH,OAAA;gBAAAiH,QAAA,EAAOrE,IAAI,CAAC8B;cAAe;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACnCvH,OAAA;gBAAAiH,QAAA,EAAOrE,IAAI,CAACS;cAAgB;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EACnCpG,aAAa,CAACwB,GAAG,CAAEX,KAAK;gBAAA,IAAAyG,YAAA;gBAAA,oBACvBzI,OAAA;kBAAAiH,QAAA,EAAmB,EAAAwB,YAAA,GAAA7F,IAAI,CAACZ,KAAK,cAAAyG,YAAA,uBAAVA,YAAA,CAAazG,KAAK,CAAC,KAAI;gBAAG,GAAlCA,KAAK;kBAAAoF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAoC,CAAC;cAAA,CACtD,CAAC;YAAA,GAbG3E,IAAI,CAAC8F,GAAG;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eACNvH,OAAA;UAAKwH,SAAS,EAAC,QAAQ;UAAAP,QAAA,gBAC3BjH,OAAA;YAAAiH,QAAA,EAAI;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BvH,OAAA;YAAAiH,QAAA,EAAG;UAA4D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnEvH,OAAA;YAAKwH,SAAS,EAAC,kBAAkB;YAAAP,QAAA,eAC7BjH,OAAA;cAAQwH,SAAS,EAAC,MAAM;cAAAP,QAAA,EAAC;YAAsB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACA;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFvH,OAAA,CAACX,KAAK;MAAC6H,IAAI,EAAC,aAAa;MAACC,OAAO,eAAEnH,OAAA,CAACF,UAAU;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpDvH,OAAA,CAACX,KAAK;MAAC6H,IAAI,EAAC,UAAU;MAACC,OAAO,eAAEnH,OAAA,CAACN,WAAW;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDvH,OAAA,CAACX,KAAK;MAAC6H,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEnH,OAAA,CAACP,QAAQ;QAACkJ,EAAE,EAAC;MAAG;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEb;AAACnH,EAAA,CAlZQD,GAAG;EAAA,QAqBOZ,WAAW;AAAA;AAAAqJ,EAAA,GArBrBzI,GAAG;AAoZZ,eAAeA,GAAG;AAAC,IAAAyI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}