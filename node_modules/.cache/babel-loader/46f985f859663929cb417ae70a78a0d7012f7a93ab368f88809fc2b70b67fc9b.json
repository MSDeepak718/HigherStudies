{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenAi Project\\\\HigherStudies\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom'; // Update these imports\nimport Dropdown from './components/dropdown.js';\nimport ProfilePage from './StudentProfile.js';\nimport './App.css';\nimport image from './Assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedScores, setSelectedScores] = useState([]);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [dropdownData, setDropdownData] = useState({\n    years: [],\n    departments: [],\n    sections: [],\n    genders: [],\n    countries: [],\n    scores: []\n  });\n  const [sortConfigs, setSortConfigs] = useState([]);\n  const dropdownRef = useRef(null);\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      const fetchedData = response.data;\n      setData(fetchedData);\n      setFilteredData(fetchedData);\n      const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\n      const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\n      const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\n      const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\n      const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\n      const allScores = fetchedData.flatMap(item => Object.keys(item.scores || {}));\n      const uniqueScores = [...new Set(allScores)];\n      setDropdownData({\n        years: uniqueYears,\n        departments: uniqueDepartments,\n        sections: uniqueSections,\n        genders: uniqueGenders,\n        countries: uniqueCountries,\n        scores: uniqueScores\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  useEffect(() => {\n    let filtered = data.filter(item => {\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every(score => {\n        var _item$scores;\n        return (_item$scores = item.scores) === null || _item$scores === void 0 ? void 0 : _item$scores[score];\n      });\n      return (!selectedYear || item.year === selectedYear) && (!selectedDepartment || item.department === selectedDepartment) && (!selectedSection || item.section === selectedSection) && (!selectedGender || item.gender === selectedGender) && (!selectedCountry || item.preferredcountry === selectedCountry) && scoreMatch;\n    });\n    if (sortConfigs.length > 0) {\n      filtered = filtered.sort((a, b) => {\n        for (const config of sortConfigs) {\n          var _a$scores, _b$scores;\n          const aScore = ((_a$scores = a.scores) === null || _a$scores === void 0 ? void 0 : _a$scores[config.key]) || 0;\n          const bScore = ((_b$scores = b.scores) === null || _b$scores === void 0 ? void 0 : _b$scores[config.key]) || 0;\n          if (aScore < bScore) {\n            return config.direction === 'ascending' ? -1 : 1;\n          }\n          if (aScore > bScore) {\n            return config.direction === 'ascending' ? 1 : -1;\n          }\n        }\n        return 0;\n      });\n    }\n    setFilteredData(filtered);\n  }, [selectedYear, selectedDepartment, selectedSection, selectedGender, selectedCountry, selectedScores, sortConfigs, data]);\n  const handleSelect = (type, selected) => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear(selectedYear === selected ? '' : selected);\n        break;\n      case 'Department':\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\n        break;\n      case 'Section':\n        setSelectedSection(selectedSection === selected ? '' : selected);\n        break;\n      case 'Gender':\n        setSelectedGender(selectedGender === selected ? '' : selected);\n        break;\n      case 'Preferred Country':\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\n        break;\n      case 'Scores':\n        if (selectedScores.includes(selected)) {\n          setSelectedScores(selectedScores.filter(score => score !== selected));\n        } else {\n          setSelectedScores([...selectedScores, selected]);\n        }\n        break;\n      default:\n        break;\n    }\n    toggleDropdown(type);\n  };\n  const getDropdownTitle = type => {\n    switch (type) {\n      case 'Year':\n        return selectedYear || 'Year';\n      case 'Department':\n        return selectedDepartment || 'Department';\n      case 'Section':\n        return selectedSection || 'Section';\n      case 'Gender':\n        return selectedGender || 'Gender';\n      case 'Preferred Country':\n        return selectedCountry || 'Preferred Country';\n      case 'Scores':\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\n      default:\n        return '';\n    }\n  };\n  const getDropdownClass = type => {\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\n  };\n  const requestSort = key => {\n    let newSortConfigs = [...sortConfigs];\n    const existingConfigIndex = newSortConfigs.findIndex(config => config.key === key);\n    if (existingConfigIndex >= 0) {\n      // Toggle direction or remove from sort order\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\n        newSortConfigs[existingConfigIndex].direction = 'descending';\n      } else {\n        newSortConfigs.splice(existingConfigIndex, 1);\n      }\n    } else {\n      // Add as new sort key\n      newSortConfigs.push({\n        key,\n        direction: 'ascending'\n      });\n    }\n    setSortConfigs(newSortConfigs);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setOpenDropdown(null);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const getDropdownStyle = type => {\n    return getDropdownTitle(type) !== type ? {\n      backgroundColor: '#fff35e'\n    } : {};\n  };\n  const handleRowClick = student => {\n    navigate(`/profile`, {\n      state: {\n        student\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Higher Studies Students Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            ref: dropdownRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterify\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Filter list by: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"params\",\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Year'),\n                  items: dropdownData.years,\n                  isOpen: openDropdown === 'Year',\n                  toggleDropdown: () => toggleDropdown('Year'),\n                  onSelect: selected => handleSelect('Year', selected),\n                  resetDropdown: () => resetDropdown('Year'),\n                  dropdownClass: getDropdownClass('Year'),\n                  style: getDropdownStyle('Year')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Department'),\n                  items: dropdownData.departments,\n                  isOpen: openDropdown === 'Department',\n                  toggleDropdown: () => toggleDropdown('Department'),\n                  onSelect: selected => handleSelect('Department', selected),\n                  resetDropdown: () => resetDropdown('Department'),\n                  dropdownClass: getDropdownClass('Department'),\n                  style: getDropdownStyle('Department')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Section'),\n                  items: dropdownData.sections,\n                  isOpen: openDropdown === 'Section',\n                  toggleDropdown: () => toggleDropdown('Section'),\n                  onSelect: selected => handleSelect('Section', selected),\n                  resetDropdown: () => resetDropdown('Section'),\n                  dropdownClass: getDropdownClass('Section'),\n                  style: getDropdownStyle('Section')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Gender'),\n                  items: dropdownData.genders,\n                  isOpen: openDropdown === 'Gender',\n                  toggleDropdown: () => toggleDropdown('Gender'),\n                  onSelect: selected => handleSelect('Gender', selected),\n                  resetDropdown: () => resetDropdown('Gender'),\n                  dropdownClass: getDropdownClass('Gender'),\n                  style: getDropdownStyle('Gender')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Preferred Country'),\n                  items: dropdownData.countries,\n                  isOpen: openDropdown === 'Preferred Country',\n                  toggleDropdown: () => toggleDropdown('Preferred Country'),\n                  onSelect: selected => handleSelect('Preferred Country', selected),\n                  resetDropdown: () => resetDropdown('Preferred Country'),\n                  dropdownClass: getDropdownClass('Preferred Country'),\n                  style: getDropdownStyle('Preferred Country')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  buttonField: getDropdownTitle('Scores'),\n                  items: dropdownData.scores,\n                  isOpen: openDropdown === 'Scores',\n                  toggleDropdown: () => toggleDropdown('Scores'),\n                  onSelect: selected => handleSelect('Scores', selected),\n                  resetDropdown: () => resetDropdown('Scores'),\n                  dropdownClass: getDropdownClass('Scores'),\n                  style: getDropdownStyle('Scores'),\n                  isMultiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"S.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Student Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Student Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Preferred Degree\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Preferred Course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Preferred Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), selectedScores.map(score => /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => requestSort(score),\n                className: \"sortable-header\",\n                children: [score, ' ', sortConfigs.some(config => config.key === score) ? sortConfigs.find(config => config.key === score).direction === 'ascending' ? '▲' : '▼' : '']\n              }, score, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scrollable-list\",\n              children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-item\",\n                onClick: () => handleRowClick(item),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.studentname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.studentid\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.section\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.preferreddegree\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.preferredcourse\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.preferredcountry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this), selectedScores.map(score => {\n                  var _item$scores2;\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: ((_item$scores2 = item.scores) === null || _item$scores2 === void 0 ? void 0 : _item$scores2[score]) || '-'\n                  }, score, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XVHKf0O8nTbyKhOvRXerGryoz0w=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","BrowserRouter","Router","Route","Routes","useNavigate","Dropdown","ProfilePage","image","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","openDropdown","setOpenDropdown","selectedYear","setSelectedYear","selectedDepartment","setSelectedDepartment","selectedSection","setSelectedSection","selectedGender","setSelectedGender","selectedCountry","setSelectedCountry","selectedScores","setSelectedScores","data","setData","filteredData","setFilteredData","dropdownData","setDropdownData","years","departments","sections","genders","countries","scores","sortConfigs","setSortConfigs","dropdownRef","navigate","get","then","response","fetchedData","uniqueYears","Set","map","item","year","uniqueDepartments","department","uniqueSections","section","uniqueGenders","gender","uniqueCountries","preferredcountry","allScores","flatMap","Object","keys","uniqueScores","catch","error","console","filtered","filter","scoreMatch","length","every","score","_item$scores","sort","a","b","config","_a$scores","_b$scores","aScore","key","bScore","direction","handleSelect","type","selected","includes","toggleDropdown","getDropdownTitle","join","getDropdownClass","requestSort","newSortConfigs","existingConfigIndex","findIndex","splice","push","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDropdownStyle","backgroundColor","handleRowClick","student","state","children","path","element","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","buttonField","items","isOpen","onSelect","resetDropdown","dropdownClass","style","isMultiple","onClick","some","find","index","studentname","studentid","preferreddegree","preferredcourse","_item$scores2","_id","_c","$RefreshReg$"],"sources":["D:/GenAi Project/HigherStudies/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom'; // Update these imports\r\nimport Dropdown from './components/dropdown.js';\r\nimport ProfilePage from './StudentProfile.js';\r\nimport './App.css';\r\nimport image from './Assets/logo.png';\r\n\r\nfunction App() {\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedGender, setSelectedGender] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedScores, setSelectedScores] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [dropdownData, setDropdownData] = useState({\r\n    years: [],\r\n    departments: [],\r\n    sections: [],\r\n    genders: [],\r\n    countries: [],\r\n    scores: [],\r\n  });\r\n  const [sortConfigs, setSortConfigs] = useState([]);\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate(); // Use useNavigate instead of useHistory\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5000/api/data')\r\n      .then((response) => {\r\n        const fetchedData = response.data;\r\n        setData(fetchedData);\r\n        setFilteredData(fetchedData);\r\n\r\n        const uniqueYears = [...new Set(fetchedData.map((item) => item.year))];\r\n        const uniqueDepartments = [...new Set(fetchedData.map((item) => item.department))];\r\n        const uniqueSections = [...new Set(fetchedData.map((item) => item.section))];\r\n        const uniqueGenders = [...new Set(fetchedData.map((item) => item.gender))];\r\n        const uniqueCountries = [...new Set(fetchedData.map((item) => item.preferredcountry))];\r\n        const allScores = fetchedData.flatMap((item) => Object.keys(item.scores || {}));\r\n        const uniqueScores = [...new Set(allScores)];\r\n\r\n        setDropdownData({\r\n          years: uniqueYears,\r\n          departments: uniqueDepartments,\r\n          sections: uniqueSections,\r\n          genders: uniqueGenders,\r\n          countries: uniqueCountries,\r\n          scores: uniqueScores,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = data.filter((item) => {\r\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every((score) => item.scores?.[score]);\r\n      return (\r\n        (!selectedYear || item.year === selectedYear) &&\r\n        (!selectedDepartment || item.department === selectedDepartment) &&\r\n        (!selectedSection || item.section === selectedSection) &&\r\n        (!selectedGender || item.gender === selectedGender) &&\r\n        (!selectedCountry || item.preferredcountry === selectedCountry) &&\r\n        scoreMatch\r\n      );\r\n    });\r\n\r\n    if (sortConfigs.length > 0) {\r\n      filtered = filtered.sort((a, b) => {\r\n        for (const config of sortConfigs) {\r\n          const aScore = a.scores?.[config.key] || 0;\r\n          const bScore = b.scores?.[config.key] || 0;\r\n\r\n          if (aScore < bScore) {\r\n            return config.direction === 'ascending' ? -1 : 1;\r\n          }\r\n          if (aScore > bScore) {\r\n            return config.direction === 'ascending' ? 1 : -1;\r\n          }\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n  }, [\r\n    selectedYear,\r\n    selectedDepartment,\r\n    selectedSection,\r\n    selectedGender,\r\n    selectedCountry,\r\n    selectedScores,\r\n    sortConfigs,\r\n    data,\r\n  ]);\r\n\r\n  const handleSelect = (type, selected) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear(selectedYear === selected ? '' : selected);\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection(selectedSection === selected ? '' : selected);\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender(selectedGender === selected ? '' : selected);\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\r\n        break;\r\n      case 'Scores':\r\n        if (selectedScores.includes(selected)) {\r\n          setSelectedScores(selectedScores.filter((score) => score !== selected));\r\n        } else {\r\n          setSelectedScores([...selectedScores, selected]);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    toggleDropdown(type);\r\n  };\r\n\r\n  const getDropdownTitle = (type) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        return selectedYear || 'Year';\r\n      case 'Department':\r\n        return selectedDepartment || 'Department';\r\n      case 'Section':\r\n        return selectedSection || 'Section';\r\n      case 'Gender':\r\n        return selectedGender || 'Gender';\r\n      case 'Preferred Country':\r\n        return selectedCountry || 'Preferred Country';\r\n      case 'Scores':\r\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getDropdownClass = (type) => {\r\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\r\n  };\r\n\r\n  const requestSort = (key) => {\r\n    let newSortConfigs = [...sortConfigs];\r\n    const existingConfigIndex = newSortConfigs.findIndex((config) => config.key === key);\r\n\r\n    if (existingConfigIndex >= 0) {\r\n      // Toggle direction or remove from sort order\r\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\r\n        newSortConfigs[existingConfigIndex].direction = 'descending';\r\n      } else {\r\n        newSortConfigs.splice(existingConfigIndex, 1);\r\n      }\r\n    } else {\r\n      // Add as new sort key\r\n      newSortConfigs.push({ key, direction: 'ascending' });\r\n    }\r\n\r\n    setSortConfigs(newSortConfigs);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setOpenDropdown(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const getDropdownStyle = (type) => {\r\n    return getDropdownTitle(type) !== type ? { backgroundColor: '#fff35e' } : {};\r\n  };\r\n\r\n  const handleRowClick = (student) => {\r\n    navigate(`/profile`, { state: { student } });\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <>\r\n              <div className=\"header\">\r\n                <img src={image} alt=\"logo\" />\r\n              </div>\r\n              <div className=\"title\">\r\n                <h2>Higher Studies Students Data</h2>\r\n              </div>\r\n              <div className=\"filter\" ref={dropdownRef}>\r\n                <div className=\"filterify\">\r\n                  <h4>Filter list by: </h4>\r\n                  <div className=\"params\">\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Year')}\r\n                      items={dropdownData.years}\r\n                      isOpen={openDropdown === 'Year'}\r\n                      toggleDropdown={() => toggleDropdown('Year')}\r\n                      onSelect={(selected) => handleSelect('Year', selected)}\r\n                      resetDropdown={() => resetDropdown('Year')}\r\n                      dropdownClass={getDropdownClass('Year')}\r\n                      style={getDropdownStyle('Year')}\r\n                    />\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Department')}\r\n                      items={dropdownData.departments}\r\n                      isOpen={openDropdown === 'Department'}\r\n                      toggleDropdown={() => toggleDropdown('Department')}\r\n                      onSelect={(selected) => handleSelect('Department', selected)}\r\n                      resetDropdown={() => resetDropdown('Department')}\r\n                      dropdownClass={getDropdownClass('Department')}\r\n                      style={getDropdownStyle('Department')}\r\n                    />\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Section')}\r\n                      items={dropdownData.sections}\r\n                      isOpen={openDropdown === 'Section'}\r\n                      toggleDropdown={() => toggleDropdown('Section')}\r\n                      onSelect={(selected) => handleSelect('Section', selected)}\r\n                      resetDropdown={() => resetDropdown('Section')}\r\n                      dropdownClass={getDropdownClass('Section')}\r\n                      style={getDropdownStyle('Section')}\r\n                    />\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Gender')}\r\n                      items={dropdownData.genders}\r\n                      isOpen={openDropdown === 'Gender'}\r\n                      toggleDropdown={() => toggleDropdown('Gender')}\r\n                      onSelect={(selected) => handleSelect('Gender', selected)}\r\n                      resetDropdown={() => resetDropdown('Gender')}\r\n                      dropdownClass={getDropdownClass('Gender')}\r\n                      style={getDropdownStyle('Gender')}\r\n                    />\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Preferred Country')}\r\n                      items={dropdownData.countries}\r\n                      isOpen={openDropdown === 'Preferred Country'}\r\n                      toggleDropdown={() => toggleDropdown('Preferred Country')}\r\n                      onSelect={(selected) => handleSelect('Preferred Country', selected)}\r\n                      resetDropdown={() => resetDropdown('Preferred Country')}\r\n                      dropdownClass={getDropdownClass('Preferred Country')}\r\n                      style={getDropdownStyle('Preferred Country')}\r\n                    />\r\n                    <Dropdown\r\n                      buttonField={getDropdownTitle('Scores')}\r\n                      items={dropdownData.scores}\r\n                      isOpen={openDropdown === 'Scores'}\r\n                      toggleDropdown={() => toggleDropdown('Scores')}\r\n                      onSelect={(selected) => handleSelect('Scores', selected)}\r\n                      resetDropdown={() => resetDropdown('Scores')}\r\n                      dropdownClass={getDropdownClass('Scores')}\r\n                      style={getDropdownStyle('Scores')}\r\n                      isMultiple={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"table-container\">\r\n                <div className=\"table-header\">\r\n                  <span>S.No</span>\r\n                  <span>Student Name</span>\r\n                  <span>Student Id</span>\r\n                  <span>Department</span>\r\n                  <span>Section</span>\r\n                  <span>Preferred Degree</span>\r\n                  <span>Preferred Course</span>\r\n                  <span>Preferred Country</span>\r\n                  {selectedScores.map((score) => (\r\n                    <span\r\n                      key={score}\r\n                      onClick={() => requestSort(score)}\r\n                      className=\"sortable-header\"\r\n                    >\r\n                      {score}{' '}\r\n                      {sortConfigs.some((config) => config.key === score)\r\n                        ? sortConfigs.find((config) => config.key === score).direction === 'ascending'\r\n                          ? '▲'\r\n                          : '▼'\r\n                        : ''}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n                <div className=\"scrollable-list\">\r\n                  {filteredData.map((item, index) => (\r\n                    <div\r\n                      className=\"list-item\"\r\n                      key={item._id}\r\n                      onClick={() => handleRowClick(item)}\r\n                    >\r\n                      <span>{index + 1}</span>\r\n                      <span>{item.studentname}</span>\r\n                      <span>{item.studentid}</span>\r\n                      <span>{item.department}</span>\r\n                      <span>{item.section}</span>\r\n                      <span>{item.preferreddegree}</span>\r\n                      <span>{item.preferredcourse}</span>\r\n                      <span>{item.preferredcountry}</span>\r\n                      {selectedScores.map((score) => (\r\n                        <span key={score}>{item.scores?.[score] || '-'}</span>\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </>\r\n          }\r\n        />\r\n        <Route path=\"/profile\" element={<ProfilePage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}