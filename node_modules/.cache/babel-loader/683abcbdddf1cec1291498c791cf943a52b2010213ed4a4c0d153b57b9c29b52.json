{"ast":null,"code":"var _jsxFileName = \"C:\\\\HigherStudies\\\\src\\\\StudentProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './StudentProfile.css';\nimport image from './Assets/logo.png';\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#9B3192', '#57167E', '#2B0B3F'];\nfunction ProfilePage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    student\n  } = location.state || {};\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n  const [editableStudent, setEditableStudent] = useState(student);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Initialize variables\n  const maxfee = (student === null || student === void 0 ? void 0 : student.maxfee) || 0;\n  const cgpa = (student === null || student === void 0 ? void 0 : student.cgpa) || 0;\n  const score = (student === null || student === void 0 ? void 0 : student.score) || {};\n  const handleReturn = () => {\n    navigate('/app');\n  };\n  const handleDelete = async () => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this student?\");\n    if (confirmDelete) {\n      try {\n        await fetch(`http://localhost:5002/api/data/${student._id}`, {\n          method: 'DELETE'\n        });\n        alert('Student deleted successfully.');\n        navigate('/app');\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        alert('Failed to delete student.');\n      }\n    }\n  };\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith('score.')) {\n      const [_, subject] = name.split('.');\n      setEditableStudent(prev => ({\n        ...prev,\n        score: {\n          ...prev.score,\n          [subject]: value\n        }\n      }));\n    } else {\n      setEditableStudent(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const response = await fetch(`http://localhost:5002/api/data/${student._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editableStudent)\n      });\n      if (response.ok) {\n        alert('Student details updated successfully.');\n        setIsEditing(false);\n      } else {\n        alert('Failed to update student details.');\n      }\n    } catch (error) {\n      console.error('Error updating student:', error);\n      alert('Failed to update student.');\n    }\n  };\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:8000/predict-eligible-colleges/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            PROGRAM: 1,\n            TUTION_FEE: parseInt(maxfee, 10),\n            SCHOLARSHIP_AVAL: 1,\n            PROGRAM_DURATION: 4,\n            COUNTRY: 1,\n            LIVING_COST: 15000,\n            ALUMINI_NETWORK: 1,\n            GATE_SCORE: parseInt(score.gatescore, 10),\n            GRE_SCORE: parseInt(score.grescore, 10),\n            TOEFL_SCORE: parseInt(score.toeflscore, 10),\n            IELTS_SCORE: parseInt(score.ieltsscore, 10),\n            GMAT_SCORE: parseInt(score.gmatscore, 10),\n            SAT_SCORE: parseInt(score.satscore, 10),\n            CGPA: cgpa,\n            DEGREE: 1,\n            MAJOR: 1,\n            ACHIVEMENT: 1,\n            PROJECTS: 2,\n            N_PAPERS: 1\n          })\n        });\n        const recommendationsData = await response.json();\n        if (response.ok) {\n          setRecommendations(recommendationsData.eligible_colleges);\n        } else {\n          console.error('Failed to fetch recommendations');\n        }\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n  }, [editableStudent]);\n  if (!editableStudent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No student data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Higher Studies Students Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"studentname\",\n              value: editableStudent.studentname,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this) : editableStudent.studentname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [Object.keys(editableStudent).map(key => key !== 'score' && key !== '_id' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-label\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-data\",\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: key,\n                value: editableStudent[key],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this) : editableStudent[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"score-heading\",\n              children: \"score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), Object.entries(editableStudent.score || {}).map(([subject, score]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-label\",\n                children: subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-data\",\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: `score.${subject}`,\n                  value: score,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this) : score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, subject, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isEditing ? handleSave : handleEditToggle,\n            className: isEditing ? 'save-button' : 'edit-button',\n            children: isEditing ? 'Save' : 'Edit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReturn,\n            className: \"return-button\",\n            children: \"Return to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommended Colleges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), recommendations.length > 0 ? recommendations.map((college, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pie-chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: college.COLLEGE_ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n              width: 450,\n              height: 500,\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: [{\n                  name: 'Eligibility',\n                  value: college.ELIGIBILITY_PERCENTAGE\n                }, {\n                  name: 'Financial',\n                  value: college.financial_percentage\n                }, {\n                  name: 'Academic',\n                  value: college.academic_percentage\n                }],\n                dataKey: \"value\",\n                nameKey: \"name\",\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 100,\n                label: true,\n                children: COLORS.map((color, i) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: color,\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onMouseEnter: e => e.target.setAttribute('fill-opacity', '0.7'),\n                  onMouseLeave: e => e.target.setAttribute('fill-opacity', '1')\n                }, `cell-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-recommendations\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 26\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No recommendations available yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ProfilePage, \"/8H0TEBPuR59Tbxjv4/UVDnIH5Y=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","image","PieChart","Pie","Cell","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","ProfilePage","_s","location","navigate","student","state","loading","setLoading","recommendations","setRecommendations","editableStudent","setEditableStudent","isEditing","setIsEditing","maxfee","cgpa","score","handleReturn","handleDelete","confirmDelete","window","confirm","fetch","_id","method","alert","error","console","handleEditToggle","handleChange","e","name","value","target","startsWith","_","subject","split","prev","handleSave","response","headers","body","JSON","stringify","ok","fetchRecommendations","PROGRAM","TUTION_FEE","parseInt","SCHOLARSHIP_AVAL","PROGRAM_DURATION","COUNTRY","LIVING_COST","ALUMINI_NETWORK","GATE_SCORE","gatescore","GRE_SCORE","grescore","TOEFL_SCORE","toeflscore","IELTS_SCORE","ieltsscore","GMAT_SCORE","gmatscore","SAT_SCORE","satscore","CGPA","DEGREE","MAJOR","ACHIVEMENT","PROJECTS","N_PAPERS","recommendationsData","json","eligible_colleges","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","type","studentname","onChange","Object","keys","map","key","entries","onClick","length","college","index","COLLEGE_ID","width","height","data","ELIGIBILITY_PERCENTAGE","financial_percentage","academic_percentage","dataKey","nameKey","cx","cy","outerRadius","label","color","i","fill","style","cursor","onMouseEnter","setAttribute","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/HigherStudies/src/StudentProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './StudentProfile.css';\r\nimport image from './Assets/logo.png';\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\r\n\r\nconst COLORS = ['#9B3192', '#57167E', '#2B0B3F']; \r\n\r\nfunction ProfilePage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { student } = location.state || {};\r\n  const [loading, setLoading] = useState(true);\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [editableStudent, setEditableStudent] = useState(student);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Initialize variables\r\n  const maxfee = student?.maxfee || 0;\r\n  const cgpa = student?.cgpa || 0;\r\n  const score = student?.score || {};\r\n\r\n  const handleReturn = () => {\r\n    navigate('/app');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this student?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await fetch(`http://localhost:5002/api/data/${student._id}`, {\r\n          method: 'DELETE',\r\n        });\r\n        alert('Student deleted successfully.');\r\n        navigate('/app');\r\n      } catch (error) {\r\n        console.error('Error deleting student:', error);\r\n        alert('Failed to delete student.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditToggle = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('score.')) {\r\n      const [_, subject] = name.split('.');\r\n      setEditableStudent((prev) => ({\r\n        ...prev,\r\n        score: {\r\n          ...prev.score,\r\n          [subject]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setEditableStudent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5002/api/data/${student._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(editableStudent),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Student details updated successfully.');\r\n        setIsEditing(false);\r\n      } else {\r\n        alert('Failed to update student details.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating student:', error);\r\n      alert('Failed to update student.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch('http://localhost:8000/predict-eligible-colleges/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            PROGRAM: 1,\r\n            TUTION_FEE: parseInt(maxfee, 10),\r\n            SCHOLARSHIP_AVAL: 1,\r\n            PROGRAM_DURATION: 4,\r\n            COUNTRY: 1,\r\n            LIVING_COST: 15000,\r\n            ALUMINI_NETWORK: 1,\r\n            GATE_SCORE: parseInt(score.gatescore, 10),\r\n            GRE_SCORE: parseInt(score.grescore, 10),\r\n            TOEFL_SCORE: parseInt(score.toeflscore, 10),\r\n            IELTS_SCORE: parseInt(score.ieltsscore, 10),\r\n            GMAT_SCORE: parseInt(score.gmatscore, 10),\r\n            SAT_SCORE: parseInt(score.satscore, 10),\r\n            CGPA: cgpa,\r\n            DEGREE: 1,\r\n            MAJOR: 1,\r\n            ACHIVEMENT: 1,\r\n            PROJECTS: 2,\r\n            N_PAPERS: 1,\r\n          }),\r\n        });\r\n        const recommendationsData = await response.json();\r\n        if (response.ok) {\r\n          setRecommendations(recommendationsData.eligible_colleges);\r\n        } else {\r\n          console.error('Failed to fetch recommendations');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching recommendations:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchRecommendations();\r\n  }, [editableStudent]);\r\n\r\n  if (!editableStudent) {\r\n    return <div>No student data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <img src={image} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"title\">\r\n        <h2>Higher Studies Students Data</h2>\r\n      </div>\r\n      <div className=\"profile-container\">\r\n        <div className='profile-details-container'>\r\n          <div className=\"profile-header\">\r\n            <h1>{isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                name=\"studentname\"\r\n                value={editableStudent.studentname}\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              editableStudent.studentname\r\n            )}</h1>\r\n          </div>\r\n          <div className=\"profile-details\">\r\n            {Object.keys(editableStudent).map((key) => (\r\n              key !== 'score' && key !== '_id' && (\r\n                <div key={key} className='detail-row'>\r\n                  <div className=\"detail-label\">{key}</div>\r\n                  <div className=\"detail-data\">\r\n                    {isEditing ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name={key}\r\n                        value={editableStudent[key]}\r\n                        onChange={handleChange}\r\n                      />\r\n                    ) : (\r\n                      editableStudent[key]\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n            <div className=\"score\">\r\n              <h3 className='score-heading'>score</h3>\r\n              {Object.entries(editableStudent.score || {}).map(([subject, score]) => (\r\n                <div key={subject} className='detail-row'>\r\n                  <div className=\"detail-label\">{subject}</div>\r\n                  <div className='detail-data'>\r\n                    {isEditing ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name={`score.${subject}`}\r\n                        value={score}\r\n                        onChange={handleChange}\r\n                      />\r\n                    ) : (\r\n                      score\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className='button'>\r\n            <button onClick={isEditing ? handleSave : handleEditToggle} className={isEditing ? 'save-button' : 'edit-button'}>\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </button>\r\n            <button onClick={handleReturn} className=\"return-button\">Return to List</button>\r\n            <button onClick={handleDelete} className='delete-button'>Delete</button>\r\n          </div>\r\n        </div>\r\n        {/* Other parts of the component */}\r\n      <div className=\"recommendations-container\">\r\n        <div className=\"recommendations\">\r\n          <h3>Recommended Colleges</h3>\r\n          {recommendations.length > 0 ? (\r\n            recommendations.map((college, index) => (\r\n              <div key={index} className=\"pie-chart-container\">\r\n                <h4>{college.COLLEGE_ID}</h4>\r\n                <PieChart width={450} height={500}>\r\n                  <Pie\r\n                    data={[\r\n                      { name: 'Eligibility', value: college.ELIGIBILITY_PERCENTAGE },\r\n                      { name: 'Financial', value: college.financial_percentage },\r\n                      { name: 'Academic', value: college.academic_percentage },\r\n                    ]}\r\n                    dataKey=\"value\"\r\n                    nameKey=\"name\"\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={100}\r\n                    label\r\n                  >\r\n                    {COLORS.map((color, i) => (\r\n                      <Cell\r\n                        key={`cell-${i}`}\r\n                        fill={color}\r\n                        style={{ cursor: 'pointer' }}\r\n                        onMouseEnter={(e) => e.target.setAttribute('fill-opacity', '0.7')}\r\n                        onMouseLeave={(e) => e.target.setAttribute('fill-opacity', '1')}\r\n                      />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip />\r\n                  <Legend />\r\n                </PieChart>\r\n                <hr />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"no-recommendations\">\r\n              {loading ? <p>Loading...</p> : <p>No recommendations available yet.</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}