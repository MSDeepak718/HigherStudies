{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git Repo\\\\GenAI-Project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport image from './Assets/logo.png';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Dropdown from './components/dropdown.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedScores, setSelectedScores] = useState([]);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [dropdownData, setDropdownData] = useState({\n    years: [],\n    departments: [],\n    sections: [],\n    genders: [],\n    countries: [],\n    scores: []\n  });\n  const toggleDropdown = dropdown => {\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\n  };\n  useEffect(() => {\n    // Fetch data initially\n    axios.get('http://localhost:5000/api/data').then(response => {\n      const fetchedData = response.data;\n      setData(fetchedData);\n      setFilteredData(fetchedData);\n\n      // Extract unique values for dropdowns\n      const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\n      const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\n      const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\n      const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\n      const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\n\n      // Extract unique score types\n      const allScores = fetchedData.flatMap(item => Object.keys(item.scores || {}));\n      const uniqueScores = [...new Set(allScores)];\n      setDropdownData({\n        years: uniqueYears,\n        departments: uniqueDepartments,\n        sections: uniqueSections,\n        genders: uniqueGenders,\n        countries: uniqueCountries,\n        scores: uniqueScores\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  useEffect(() => {\n    // Filter data whenever any of the selected filters change\n    const filtered = data.filter(item => {\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every(score => {\n        var _item$scores;\n        return (_item$scores = item.scores) === null || _item$scores === void 0 ? void 0 : _item$scores[score];\n      });\n      return (!selectedYear || item.year === selectedYear) && (!selectedDepartment || item.department === selectedDepartment) && (!selectedSection || item.section === selectedSection) && (!selectedGender || item.gender === selectedGender) && (!selectedCountry || item.preferredcountry === selectedCountry) && scoreMatch;\n    });\n    setFilteredData(filtered);\n  }, [selectedYear, selectedDepartment, selectedSection, selectedGender, selectedCountry, selectedScores, data]);\n  const handleSelect = (type, selected) => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear(selectedYear === selected ? '' : selected);\n        break;\n      case 'Department':\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\n        break;\n      case 'Section':\n        setSelectedSection(selectedSection === selected ? '' : selected);\n        break;\n      case 'Gender':\n        setSelectedGender(selectedGender === selected ? '' : selected);\n        break;\n      case 'Preferred Country':\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\n        break;\n      case 'Scores':\n        if (selectedScores.includes(selected)) {\n          setSelectedScores(selectedScores.filter(score => score !== selected));\n        } else {\n          setSelectedScores([...selectedScores, selected]);\n        }\n        break;\n      default:\n        break;\n    }\n    toggleDropdown(type);\n  };\n  const getDropdownTitle = (type, selected) => {\n    switch (type) {\n      case 'Year':\n        return selectedYear || 'Year';\n      case 'Department':\n        return selectedDepartment || 'Department';\n      case 'Section':\n        return selectedSection || 'Section';\n      case 'Gender':\n        return selectedGender || 'Gender';\n      case 'Preferred Country':\n        return selectedCountry || 'Preferred Country';\n      case 'Scores':\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Higher Studies Students Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterify\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter list by: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Year', selectedYear),\n            items: dropdownData.years,\n            isOpen: openDropdown === 'Year',\n            toggleDropdown: () => toggleDropdown('Year'),\n            onSelect: selected => handleSelect('Year', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Department', selectedDepartment),\n            items: dropdownData.departments,\n            isOpen: openDropdown === 'Department',\n            toggleDropdown: () => toggleDropdown('Department'),\n            onSelect: selected => handleSelect('Department', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Section', selectedSection),\n            items: dropdownData.sections,\n            isOpen: openDropdown === 'Section',\n            toggleDropdown: () => toggleDropdown('Section'),\n            onSelect: selected => handleSelect('Section', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Gender', selectedGender),\n            items: dropdownData.genders,\n            isOpen: openDropdown === 'Gender',\n            toggleDropdown: () => toggleDropdown('Gender'),\n            onSelect: selected => handleSelect('Gender', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Preferred Country', selectedCountry),\n            items: dropdownData.countries,\n            isOpen: openDropdown === 'Preferred Country',\n            toggleDropdown: () => toggleDropdown('Preferred Country'),\n            onSelect: selected => handleSelect('Preferred Country', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Scores', selectedScores),\n            items: dropdownData.scores,\n            isOpen: openDropdown === 'Scores',\n            toggleDropdown: () => toggleDropdown('Scores'),\n            onSelect: selected => handleSelect('Scores', selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glow-button\",\n          children: \"Chat with Kutty AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"S.No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Student Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Degree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), selectedScores.map(score => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: score\n        }, score, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollable-list\",\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.studentname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.studentid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferreddegree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferredcourse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferredcountry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), selectedScores.map(score => {\n            var _item$scores2;\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ((_item$scores2 = item.scores) === null || _item$scores2 === void 0 ? void 0 : _item$scores2[score]) || 'N/A'\n            }, score, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this);\n          })]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"zMtecor4D6lE0tX2bF9hUhYMSJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","React","useEffect","useState","axios","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","openDropdown","setOpenDropdown","selectedYear","setSelectedYear","selectedDepartment","setSelectedDepartment","selectedSection","setSelectedSection","selectedGender","setSelectedGender","selectedCountry","setSelectedCountry","selectedScores","setSelectedScores","data","setData","filteredData","setFilteredData","dropdownData","setDropdownData","years","departments","sections","genders","countries","scores","toggleDropdown","dropdown","get","then","response","fetchedData","uniqueYears","Set","map","item","year","uniqueDepartments","department","uniqueSections","section","uniqueGenders","gender","uniqueCountries","preferredcountry","allScores","flatMap","Object","keys","uniqueScores","catch","error","console","filtered","filter","scoreMatch","length","every","score","_item$scores","handleSelect","type","selected","includes","getDropdownTitle","join","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","buttonField","items","isOpen","onSelect","index","studentname","studentid","preferreddegree","preferredcourse","_item$scores2","_id","_c","$RefreshReg$"],"sources":["E:/Git Repo/GenAI-Project/src/App.js"],"sourcesContent":["import image from './Assets/logo.png';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Dropdown from './components/dropdown.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedGender, setSelectedGender] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedScores, setSelectedScores] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [dropdownData, setDropdownData] = useState({\r\n    years: [],\r\n    departments: [],\r\n    sections: [],\r\n    genders: [],\r\n    countries: [],\r\n    scores: [],\r\n  });\r\n\r\n  const toggleDropdown = (dropdown) => {\r\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data initially\r\n    axios\r\n      .get('http://localhost:5000/api/data')\r\n      .then((response) => {\r\n        const fetchedData = response.data;\r\n        setData(fetchedData);\r\n        setFilteredData(fetchedData);\r\n\r\n        // Extract unique values for dropdowns\r\n        const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\r\n        const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\r\n        const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\r\n        const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\r\n        const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\r\n\r\n        // Extract unique score types\r\n        const allScores = fetchedData.flatMap(item => Object.keys(item.scores || {}));\r\n        const uniqueScores = [...new Set(allScores)];\r\n\r\n        setDropdownData({\r\n          years: uniqueYears,\r\n          departments: uniqueDepartments,\r\n          sections: uniqueSections,\r\n          genders: uniqueGenders,\r\n          countries: uniqueCountries,\r\n          scores: uniqueScores,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter data whenever any of the selected filters change\r\n    const filtered = data.filter((item) => {\r\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every(score => item.scores?.[score]);\r\n      return (\r\n        (!selectedYear || item.year === selectedYear) &&\r\n        (!selectedDepartment || item.department === selectedDepartment) &&\r\n        (!selectedSection || item.section === selectedSection) &&\r\n        (!selectedGender || item.gender === selectedGender) &&\r\n        (!selectedCountry || item.preferredcountry === selectedCountry) &&\r\n        scoreMatch\r\n      );\r\n    });\r\n    setFilteredData(filtered);\r\n  }, [\r\n    selectedYear,\r\n    selectedDepartment,\r\n    selectedSection,\r\n    selectedGender,\r\n    selectedCountry,\r\n    selectedScores,\r\n    data,\r\n  ]);\r\n\r\n  const handleSelect = (type, selected) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear(selectedYear === selected ? '' : selected);\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection(selectedSection === selected ? '' : selected);\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender(selectedGender === selected ? '' : selected);\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\r\n        break;\r\n      case 'Scores':\r\n        if (selectedScores.includes(selected)) {\r\n          setSelectedScores(selectedScores.filter(score => score !== selected));\r\n        } else {\r\n          setSelectedScores([...selectedScores, selected]);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    toggleDropdown(type);\r\n  };\r\n\r\n  const getDropdownTitle = (type, selected) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        return selectedYear || 'Year';\r\n      case 'Department':\r\n        return selectedDepartment || 'Department';\r\n      case 'Section':\r\n        return selectedSection || 'Section';\r\n      case 'Gender':\r\n        return selectedGender || 'Gender';\r\n      case 'Preferred Country':\r\n        return selectedCountry || 'Preferred Country';\r\n      case 'Scores':\r\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <img src={image} alt='logo' />\r\n      </div>\r\n      <div className='title'>\r\n        <h2>Higher Studies Students Data</h2>\r\n      </div>\r\n      <div className='filter'>\r\n        <div className='filterify'>\r\n          <h4>Filter list by: </h4>\r\n          <div className='params'>\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Year', selectedYear)}\r\n              items={dropdownData.years}\r\n              isOpen={openDropdown === 'Year'}\r\n              toggleDropdown={() => toggleDropdown('Year')}\r\n              onSelect={(selected) => handleSelect('Year', selected)}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Department', selectedDepartment)}\r\n              items={dropdownData.departments}\r\n              isOpen={openDropdown === 'Department'}\r\n              toggleDropdown={() => toggleDropdown('Department')}\r\n              onSelect={(selected) => handleSelect('Department', selected)}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Section', selectedSection)}\r\n              items={dropdownData.sections}\r\n              isOpen={openDropdown === 'Section'}\r\n              toggleDropdown={() => toggleDropdown('Section')}\r\n              onSelect={(selected) => handleSelect('Section', selected)}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Gender', selectedGender)}\r\n              items={dropdownData.genders}\r\n              isOpen={openDropdown === 'Gender'}\r\n              toggleDropdown={() => toggleDropdown('Gender')}\r\n              onSelect={(selected) => handleSelect('Gender', selected)}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Preferred Country', selectedCountry)}\r\n              items={dropdownData.countries}\r\n              isOpen={openDropdown === 'Preferred Country'}\r\n              toggleDropdown={() => toggleDropdown('Preferred Country')}\r\n              onSelect={(selected) => handleSelect('Preferred Country', selected)}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Scores', selectedScores)}\r\n              items={dropdownData.scores}\r\n              isOpen={openDropdown === 'Scores'}\r\n              toggleDropdown={() => toggleDropdown('Scores')}\r\n              onSelect={(selected) => handleSelect('Scores', selected)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='button-container'>\r\n          <button className='glow-button'>Chat with Kutty AI</button>\r\n        </div>\r\n      </div>\r\n      <div className='table-container'>\r\n        <div className='table-header'>\r\n          <span>S.No</span>\r\n          <span>Student Name</span>\r\n          <span>Student Id</span>\r\n          <span>Department</span>\r\n          <span>Section</span>\r\n          <span>Preferred Degree</span>\r\n          <span>Preferred Course</span>\r\n          <span>Preferred Country</span>\r\n          {selectedScores.map(score => (\r\n            <span key={score}>{score}</span>\r\n          ))}\r\n        </div>\r\n        <div className='scrollable-list'>\r\n          {filteredData.map((item, index) => (\r\n            <div className='list-item' key={item._id}>\r\n              <span>{index + 1}</span>\r\n              <span>{item.studentname}</span>\r\n              <span>{item.studentid}</span>\r\n              <span>{item.department}</span>\r\n              <span>{item.section}</span>\r\n              <span>{item.preferreddegree}</span>\r\n              <span>{item.preferredcourse}</span>\r\n              <span>{item.preferredcountry}</span>\r\n              {selectedScores.map(score => (\r\n                <span key={score}>{item.scores?.[score] || 'N/A'}</span>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='footer'>\r\n        <p>This is a footer</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}