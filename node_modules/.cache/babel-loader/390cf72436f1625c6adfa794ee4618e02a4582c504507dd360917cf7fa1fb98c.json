{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git Repo\\\\GenAI-Project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Dropdown from './components/dropdown';\nimport './App.css';\nimport image from './Assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [openDropdown, setOpenDropdown] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [selectedSection, setSelectedSection] = useState('');\n  const [selectedGender, setSelectedGender] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedScores, setSelectedScores] = useState([]);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [dropdownData, setDropdownData] = useState({\n    years: [],\n    departments: [],\n    sections: [],\n    genders: [],\n    countries: [],\n    scores: []\n  });\n  const [sortConfigs, setSortConfigs] = useState([]);\n  const [message, setMessage] = useState('');\n  const dropdownRef = useRef(null);\n  const toggleDropdown = dropdown => {\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\n  };\n  const resetDropdown = type => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear('');\n        break;\n      case 'Department':\n        setSelectedDepartment('');\n        break;\n      case 'Section':\n        setSelectedSection('');\n        break;\n      case 'Gender':\n        setSelectedGender('');\n        break;\n      case 'Preferred Country':\n        setSelectedCountry('');\n        break;\n      case 'Scores':\n        setSelectedScores([]);\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      const fetchedData = response.data;\n      setData(fetchedData);\n      setFilteredData(fetchedData);\n      const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\n      const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\n      const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\n      const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\n      const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\n      const allScores = fetchedData.flatMap(item => Object.keys(item.scores || {}));\n      const uniqueScores = [...new Set(allScores)];\n      setDropdownData({\n        years: uniqueYears,\n        departments: uniqueDepartments,\n        sections: uniqueSections,\n        genders: uniqueGenders,\n        countries: uniqueCountries,\n        scores: uniqueScores\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  useEffect(() => {\n    let filtered = data.filter(item => {\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every(score => {\n        var _item$scores;\n        return (_item$scores = item.scores) === null || _item$scores === void 0 ? void 0 : _item$scores[score];\n      });\n      return (!selectedYear || item.year === selectedYear) && (!selectedDepartment || item.department === selectedDepartment) && (!selectedSection || item.section === selectedSection) && (!selectedGender || item.gender === selectedGender) && (!selectedCountry || item.preferredcountry === selectedCountry) && scoreMatch;\n    });\n    if (sortConfigs.length > 0) {\n      filtered = filtered.sort((a, b) => {\n        for (const config of sortConfigs) {\n          var _a$scores, _b$scores;\n          const aScore = ((_a$scores = a.scores) === null || _a$scores === void 0 ? void 0 : _a$scores[config.key]) || 0;\n          const bScore = ((_b$scores = b.scores) === null || _b$scores === void 0 ? void 0 : _b$scores[config.key]) || 0;\n          if (aScore < bScore) {\n            return config.direction === 'ascending' ? -1 : 1;\n          }\n          if (aScore > bScore) {\n            return config.direction === 'ascending' ? 1 : -1;\n          }\n        }\n        return 0;\n      });\n    }\n    setFilteredData(filtered);\n  }, [selectedYear, selectedDepartment, selectedSection, selectedGender, selectedCountry, selectedScores, sortConfigs, data]);\n  const handleSelect = (type, selected) => {\n    switch (type) {\n      case 'Year':\n        setSelectedYear(selectedYear === selected ? '' : selected);\n        break;\n      case 'Department':\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\n        break;\n      case 'Section':\n        setSelectedSection(selectedSection === selected ? '' : selected);\n        break;\n      case 'Gender':\n        setSelectedGender(selectedGender === selected ? '' : selected);\n        break;\n      case 'Preferred Country':\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\n        break;\n      case 'Scores':\n        if (selectedScores.includes(selected)) {\n          setSelectedScores(selectedScores.filter(score => score !== selected));\n        } else {\n          setSelectedScores([...selectedScores, selected]);\n        }\n        break;\n      default:\n        break;\n    }\n    toggleDropdown(type);\n  };\n  const getDropdownTitle = type => {\n    switch (type) {\n      case 'Year':\n        return selectedYear || 'Year';\n      case 'Department':\n        return selectedDepartment || 'Department';\n      case 'Section':\n        return selectedSection || 'Section';\n      case 'Gender':\n        return selectedGender || 'Gender';\n      case 'Preferred Country':\n        return selectedCountry || 'Preferred Country';\n      case 'Scores':\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\n      default:\n        return '';\n    }\n  };\n  const getDropdownClass = type => {\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\n  };\n  const requestSort = key => {\n    let newSortConfigs = [...sortConfigs];\n    const existingConfigIndex = newSortConfigs.findIndex(config => config.key === key);\n    if (existingConfigIndex >= 0) {\n      // Toggle direction or remove from sort order\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\n        newSortConfigs[existingConfigIndex].direction = 'descending';\n      } else {\n        newSortConfigs.splice(existingConfigIndex, 1);\n      }\n    } else {\n      // Add as new sort key\n      newSortConfigs.push({\n        key,\n        direction: 'ascending'\n      });\n    }\n    setSortConfigs(newSortConfigs);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setOpenDropdown(null);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const getDropdownStyle = type => {\n    return getDropdownTitle(type) !== type ? {\n      backgroundColor: '#fff35e'\n    } : {};\n  };\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n  const handleSendEmail = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/sendEmail', {\n        filteredData,\n        message\n      });\n      console.log('Emails sent:', response.data);\n      setMessage('Mail Sent'); // Clear message after sending\n    } catch (error) {\n      console.error('Error sending emails:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Higher Studies Students Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterify\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter list by: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"params\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Year'),\n            items: dropdownData.years,\n            isOpen: openDropdown === 'Year',\n            toggleDropdown: () => toggleDropdown('Year'),\n            onSelect: selected => handleSelect('Year', selected),\n            resetDropdown: () => resetDropdown('Year'),\n            dropdownClass: getDropdownClass('Year'),\n            style: getDropdownStyle('Year')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Department'),\n            items: dropdownData.departments,\n            isOpen: openDropdown === 'Department',\n            toggleDropdown: () => toggleDropdown('Department'),\n            onSelect: selected => handleSelect('Department', selected),\n            resetDropdown: () => resetDropdown('Department'),\n            dropdownClass: getDropdownClass('Department'),\n            style: getDropdownStyle('Department')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Section'),\n            items: dropdownData.sections,\n            isOpen: openDropdown === 'Section',\n            toggleDropdown: () => toggleDropdown('Section'),\n            onSelect: selected => handleSelect('Section', selected),\n            resetDropdown: () => resetDropdown('Section'),\n            dropdownClass: getDropdownClass('Section'),\n            style: getDropdownStyle('Section')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Gender'),\n            items: dropdownData.genders,\n            isOpen: openDropdown === 'Gender',\n            toggleDropdown: () => toggleDropdown('Gender'),\n            onSelect: selected => handleSelect('Gender', selected),\n            resetDropdown: () => resetDropdown('Gender'),\n            dropdownClass: getDropdownClass('Gender'),\n            style: getDropdownStyle('Gender')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Preferred Country'),\n            items: dropdownData.countries,\n            isOpen: openDropdown === 'Preferred Country',\n            toggleDropdown: () => toggleDropdown('Preferred Country'),\n            onSelect: selected => handleSelect('Preferred Country', selected),\n            resetDropdown: () => resetDropdown('Preferred Country'),\n            dropdownClass: getDropdownClass('Preferred Country'),\n            style: getDropdownStyle('Preferred Country')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            buttonField: getDropdownTitle('Scores'),\n            items: dropdownData.scores,\n            isOpen: openDropdown === 'Scores',\n            toggleDropdown: () => toggleDropdown('Scores'),\n            onSelect: selected => handleSelect('Scores', selected),\n            resetDropdown: () => resetDropdown('Scores'),\n            dropdownClass: getDropdownClass('Scores'),\n            style: getDropdownStyle('Scores')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"glow-button\",\n          children: \"Chat with Kutty AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"S.No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Student Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Degree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Preferred Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), selectedScores.map(score => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => requestSort(score),\n          className: \"sortable-header\",\n          children: [score, \" \", sortConfigs.some(config => config.key === score) ? sortConfigs.find(config => config.key === score).direction === 'ascending' ? '▲' : '▼' : '']\n        }, score, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollable-list\",\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.studentname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.studentid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferreddegree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferredcourse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.preferredcountry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), selectedScores.map(score => {\n            var _item$scores2;\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ((_item$scores2 = item.scores) === null || _item$scores2 === void 0 ? void 0 : _item$scores2[score]) || 'N/A'\n            }, score, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this);\n          })]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Send Message to Filtered Students:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: handleMessageChange,\n        placeholder: \"Enter your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendEmail,\n        className: \"send-button\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"QKokkSd3A5C4u69NfdDerVgf/Aw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Dropdown","image","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","openDropdown","setOpenDropdown","selectedYear","setSelectedYear","selectedDepartment","setSelectedDepartment","selectedSection","setSelectedSection","selectedGender","setSelectedGender","selectedCountry","setSelectedCountry","selectedScores","setSelectedScores","data","setData","filteredData","setFilteredData","dropdownData","setDropdownData","years","departments","sections","genders","countries","scores","sortConfigs","setSortConfigs","message","setMessage","dropdownRef","toggleDropdown","dropdown","resetDropdown","type","get","then","response","fetchedData","uniqueYears","Set","map","item","year","uniqueDepartments","department","uniqueSections","section","uniqueGenders","gender","uniqueCountries","preferredcountry","allScores","flatMap","Object","keys","uniqueScores","catch","error","console","filtered","filter","scoreMatch","length","every","score","_item$scores","sort","a","b","config","_a$scores","_b$scores","aScore","key","bScore","direction","handleSelect","selected","includes","getDropdownTitle","join","getDropdownClass","requestSort","newSortConfigs","existingConfigIndex","findIndex","splice","push","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDropdownStyle","backgroundColor","handleMessageChange","value","handleSendEmail","post","log","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","buttonField","items","isOpen","onSelect","dropdownClass","style","onClick","some","find","index","studentname","studentid","preferreddegree","preferredcourse","_item$scores2","_id","onChange","placeholder","_c","$RefreshReg$"],"sources":["E:/Git Repo/GenAI-Project/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Dropdown from './components/dropdown';\r\nimport './App.css';\r\nimport image from './Assets/logo.png';\r\n\r\nfunction App() {\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedGender, setSelectedGender] = useState('');\r\n  const [selectedCountry, setSelectedCountry] = useState('');\r\n  const [selectedScores, setSelectedScores] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [dropdownData, setDropdownData] = useState({\r\n    years: [],\r\n    departments: [],\r\n    sections: [],\r\n    genders: [],\r\n    countries: [],\r\n    scores: [],\r\n  });\r\n\r\n  const [sortConfigs, setSortConfigs] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const dropdownRef = useRef(null);\r\n\r\n  const toggleDropdown = (dropdown) => {\r\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\r\n  };\r\n\r\n  const resetDropdown = (type) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear('');\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment('');\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection('');\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender('');\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry('');\r\n        break;\r\n      case 'Scores':\r\n        setSelectedScores([]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5000/api/data')\r\n      .then((response) => {\r\n        const fetchedData = response.data;\r\n        setData(fetchedData);\r\n        setFilteredData(fetchedData);\r\n\r\n        const uniqueYears = [...new Set(fetchedData.map(item => item.year))];\r\n        const uniqueDepartments = [...new Set(fetchedData.map(item => item.department))];\r\n        const uniqueSections = [...new Set(fetchedData.map(item => item.section))];\r\n        const uniqueGenders = [...new Set(fetchedData.map(item => item.gender))];\r\n        const uniqueCountries = [...new Set(fetchedData.map(item => item.preferredcountry))];\r\n        const allScores = fetchedData.flatMap(item => Object.keys(item.scores || {}));\r\n        const uniqueScores = [...new Set(allScores)];\r\n\r\n        setDropdownData({\r\n          years: uniqueYears,\r\n          departments: uniqueDepartments,\r\n          sections: uniqueSections,\r\n          genders: uniqueGenders,\r\n          countries: uniqueCountries,\r\n          scores: uniqueScores,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let filtered = data.filter((item) => {\r\n      const scoreMatch = selectedScores.length === 0 || selectedScores.every(score => item.scores?.[score]);\r\n      return (\r\n        (!selectedYear || item.year === selectedYear) &&\r\n        (!selectedDepartment || item.department === selectedDepartment) &&\r\n        (!selectedSection || item.section === selectedSection) &&\r\n        (!selectedGender || item.gender === selectedGender) &&\r\n        (!selectedCountry || item.preferredcountry === selectedCountry) &&\r\n        scoreMatch\r\n      );\r\n    });\r\n\r\n    if (sortConfigs.length > 0) {\r\n      filtered = filtered.sort((a, b) => {\r\n        for (const config of sortConfigs) {\r\n          const aScore = a.scores?.[config.key] || 0;\r\n          const bScore = b.scores?.[config.key] || 0;\r\n\r\n          if (aScore < bScore) {\r\n            return config.direction === 'ascending' ? -1 : 1;\r\n          }\r\n          if (aScore > bScore) {\r\n            return config.direction === 'ascending' ? 1 : -1;\r\n          }\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n  }, [\r\n    selectedYear,\r\n    selectedDepartment,\r\n    selectedSection,\r\n    selectedGender,\r\n    selectedCountry,\r\n    selectedScores,\r\n    sortConfigs,\r\n    data,\r\n  ]);\r\n\r\n  const handleSelect = (type, selected) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        setSelectedYear(selectedYear === selected ? '' : selected);\r\n        break;\r\n      case 'Department':\r\n        setSelectedDepartment(selectedDepartment === selected ? '' : selected);\r\n        break;\r\n      case 'Section':\r\n        setSelectedSection(selectedSection === selected ? '' : selected);\r\n        break;\r\n      case 'Gender':\r\n        setSelectedGender(selectedGender === selected ? '' : selected);\r\n        break;\r\n      case 'Preferred Country':\r\n        setSelectedCountry(selectedCountry === selected ? '' : selected);\r\n        break;\r\n      case 'Scores':\r\n        if (selectedScores.includes(selected)) {\r\n          setSelectedScores(selectedScores.filter(score => score !== selected));\r\n        } else {\r\n          setSelectedScores([...selectedScores, selected]);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    toggleDropdown(type);\r\n  };\r\n\r\n  const getDropdownTitle = (type) => {\r\n    switch (type) {\r\n      case 'Year':\r\n        return selectedYear || 'Year';\r\n      case 'Department':\r\n        return selectedDepartment || 'Department';\r\n      case 'Section':\r\n        return selectedSection || 'Section';\r\n      case 'Gender':\r\n        return selectedGender || 'Gender';\r\n      case 'Preferred Country':\r\n        return selectedCountry || 'Preferred Country';\r\n      case 'Scores':\r\n        return selectedScores.length > 0 ? selectedScores.join(', ') : 'Scores';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getDropdownClass = (type) => {\r\n    return getDropdownTitle(type) !== type ? 'highlighted-dropdown' : '';\r\n  };\r\n\r\n  const requestSort = (key) => {\r\n    let newSortConfigs = [...sortConfigs];\r\n    const existingConfigIndex = newSortConfigs.findIndex(config => config.key === key);\r\n    \r\n    if (existingConfigIndex >= 0) {\r\n      // Toggle direction or remove from sort order\r\n      if (newSortConfigs[existingConfigIndex].direction === 'ascending') {\r\n        newSortConfigs[existingConfigIndex].direction = 'descending';\r\n      } else {\r\n        newSortConfigs.splice(existingConfigIndex, 1);\r\n      }\r\n    } else {\r\n      // Add as new sort key\r\n      newSortConfigs.push({ key, direction: 'ascending' });\r\n    }\r\n    \r\n    setSortConfigs(newSortConfigs);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setOpenDropdown(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const getDropdownStyle = (type) => {\r\n    return getDropdownTitle(type) !== type ? { backgroundColor: '#fff35e' } : {};\r\n  };\r\n\r\n  const handleMessageChange = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendEmail = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/sendEmail', {\r\n        filteredData,\r\n        message\r\n      });\r\n      console.log('Emails sent:', response.data);\r\n      setMessage('Mail Sent'); // Clear message after sending\r\n    } catch (error) {\r\n      console.error('Error sending emails:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <img src={image} alt='logo' />\r\n      </div>\r\n      <div className='title'>\r\n        <h2>Higher Studies Students Data</h2>\r\n      </div>\r\n      <div className='filter' ref={dropdownRef}>\r\n        <div className='filterify'>\r\n          <h4>Filter list by: </h4>\r\n          <div className='params'>\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Year')}\r\n              items={dropdownData.years}\r\n              isOpen={openDropdown === 'Year'}\r\n              toggleDropdown={() => toggleDropdown('Year')}\r\n              onSelect={(selected) => handleSelect('Year', selected)}\r\n              resetDropdown={() => resetDropdown('Year')}\r\n              dropdownClass={getDropdownClass('Year')}\r\n              style={getDropdownStyle('Year')}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Department')}\r\n              items={dropdownData.departments}\r\n              isOpen={openDropdown === 'Department'}\r\n              toggleDropdown={() => toggleDropdown('Department')}\r\n              onSelect={(selected) => handleSelect('Department', selected)}\r\n              resetDropdown={() => resetDropdown('Department')}\r\n              dropdownClass={getDropdownClass('Department')}\r\n              style={getDropdownStyle('Department')}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Section')}\r\n              items={dropdownData.sections}\r\n              isOpen={openDropdown === 'Section'}\r\n              toggleDropdown={() => toggleDropdown('Section')}\r\n              onSelect={(selected) => handleSelect('Section', selected)}\r\n              resetDropdown={() => resetDropdown('Section')}\r\n              dropdownClass={getDropdownClass('Section')}\r\n              style={getDropdownStyle('Section')}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Gender')}\r\n              items={dropdownData.genders}\r\n              isOpen={openDropdown === 'Gender'}\r\n              toggleDropdown={() => toggleDropdown('Gender')}\r\n              onSelect={(selected) => handleSelect('Gender', selected)}\r\n              resetDropdown={() => resetDropdown('Gender')}\r\n              dropdownClass={getDropdownClass('Gender')}\r\n              style={getDropdownStyle('Gender')}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Preferred Country')}\r\n              items={dropdownData.countries}\r\n              isOpen={openDropdown === 'Preferred Country'}\r\n              toggleDropdown={() => toggleDropdown('Preferred Country')}\r\n              onSelect={(selected) => handleSelect('Preferred Country', selected)}\r\n              resetDropdown={() => resetDropdown('Preferred Country')}\r\n              dropdownClass={getDropdownClass('Preferred Country')}\r\n              style={getDropdownStyle('Preferred Country')}\r\n            />\r\n            <Dropdown\r\n              buttonField={getDropdownTitle('Scores')}\r\n              items={dropdownData.scores}\r\n              isOpen={openDropdown === 'Scores'}\r\n              toggleDropdown={() => toggleDropdown('Scores')}\r\n              onSelect={(selected) => handleSelect('Scores', selected)}\r\n              resetDropdown={() => resetDropdown('Scores')}\r\n              dropdownClass={getDropdownClass('Scores')}\r\n              style={getDropdownStyle('Scores')}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='button-container'>\r\n          <button className='glow-button'>Chat with Kutty AI</button>\r\n        </div>\r\n      </div>\r\n      <div className='table-container'>\r\n        <div className='table-header'>\r\n          <span>S.No</span>\r\n          <span>Student Name</span>\r\n          <span>Student Id</span>\r\n          <span>Department</span>\r\n          <span>Section</span>\r\n          <span>Preferred Degree</span>\r\n          <span>Preferred Course</span>\r\n          <span>Preferred Country</span>\r\n          {selectedScores.map(score => (\r\n            <span key={score} onClick={() => requestSort(score)} className=\"sortable-header\">\r\n              {score} {sortConfigs.some(config => config.key === score) ? (sortConfigs.find(config => config.key === score).direction === 'ascending' ? '▲' : '▼') : ''}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className='scrollable-list'>\r\n          {filteredData.map((item, index) => (\r\n            <div className='list-item' key={item._id}>\r\n              <span>{index + 1}</span>\r\n              <span>{item.studentname}</span>\r\n              <span>{item.studentid}</span>\r\n              <span>{item.department}</span>\r\n              <span>{item.section}</span>\r\n              <span>{item.preferreddegree}</span>\r\n              <span>{item.preferredcourse}</span>\r\n              <span>{item.preferredcountry}</span>\r\n              {selectedScores.map(score => (\r\n                <span key={score}>{item.scores?.[score] || 'N/A'}</span>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='footer'>\r\n        <h4>Send Message to Filtered Students:</h4>\r\n        <textarea\r\n          value={message}\r\n          onChange={handleMessageChange}\r\n          placeholder='Enter your message here...'\r\n        />\r\n        <button onClick={handleSendEmail} className='send-button'>\r\n          Send Email\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}