{"ast":null,"code":"var _jsxFileName = \"C:\\\\HigherStudies\\\\src\\\\StudentProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport './StudentProfile.css';\nimport image from './Assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    student\n  } = location.state || {};\n  const [loading, setLoading] = useState(true);\n  const [recommendations, setRecommendations] = useState([]);\n  const [editableStudent, setEditableStudent] = useState(student);\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Initialize variables\n  const maxfee = (student === null || student === void 0 ? void 0 : student.maxfee) || 0; // Set a default or pull from student object\n  const cgpa = (student === null || student === void 0 ? void 0 : student.cgpa) || 0;\n  const preferredcountry = (student === null || student === void 0 ? void 0 : student.preferredcountry) || \"\"; // Default or from student\n  const preferreddegree = (student === null || student === void 0 ? void 0 : student.preferreddegree) || \"\"; // Default or from student\n  const score = (student === null || student === void 0 ? void 0 : student.score) || {}; // Ensure score exists\n\n  const handleReturn = () => {\n    navigate('/app');\n  };\n  const handleDelete = async () => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this student?\");\n    if (confirmDelete) {\n      try {\n        await fetch(`http://localhost:5002/api/data/${student._id}`, {\n          method: 'DELETE'\n        });\n        alert('Student deleted successfully.');\n        navigate('/app');\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        alert('Failed to delete student.');\n      }\n    }\n  };\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith('score.')) {\n      const [_, subject] = name.split('.');\n      setEditableStudent(prev => ({\n        ...prev,\n        score: {\n          ...prev.score,\n          [subject]: value\n        }\n      }));\n    } else {\n      setEditableStudent(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleSave = async () => {\n    console.log('Saving data:', editableStudent);\n    try {\n      const response = await fetch(`http://localhost:5002/api/data/${student._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editableStudent)\n      });\n      if (response.ok) {\n        alert('Student details updated successfully.');\n        setIsEditing(false);\n      } else {\n        alert('Failed to update student details.');\n      }\n    } catch (error) {\n      console.error('Error updating student:', error);\n      alert('Failed to update student.');\n    }\n  };\n  useEffect(() => {\n    const fetchRecommendations = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:8000/predict-eligible-colleges/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            PROGRAM: 1,\n            TUTION_FEE: parseInt(maxfee, 10),\n            // Convert to integer\n            SCHOLARSHIP_AVAL: 1,\n            PROGRAM_DURATION: 4,\n            COUNTRY: 1,\n            // Example country code\n            LIVING_COST: 15000,\n            ALUMINI_NETWORK: 1,\n            GATE_SCORE: parseInt(score.gatescore, 10),\n            GRE_SCORE: parseInt(score.grescore, 10),\n            TOEFL_SCORE: parseInt(score.toeflscore, 10),\n            IELTS_SCORE: parseInt(score.ieltsscore, 10),\n            GMAT_SCORE: parseInt(score.gmatscore, 10),\n            SAT_SCORE: parseInt(score.satscore, 10),\n            CGPA: 8.5,\n            DEGREE: 1,\n            // Example degree code\n            MAJOR: 1,\n            ACHIVEMENT: 1,\n            PROJECTS: 2,\n            N_PAPERS: 1\n          })\n        });\n        const recommendationsData = await response.json();\n        console.log(\"Recommendations Data:\", recommendationsData); // Log the data\n        if (response.ok) {\n          setRecommendations(recommendationsData.eligible_colleges); // Ensure you're accessing the correct property\n        } else {\n          console.error('Failed to fetch recommendations');\n        }\n      } catch (error) {\n        console.error('Error fetching recommendations:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecommendations();\n  }, [editableStudent]);\n  if (!editableStudent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No student data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Higher Studies Students Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"studentname\",\n              value: editableStudent.studentname,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this) : editableStudent.studentname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: [Object.keys(editableStudent).map(key => key !== 'score' && key !== '_id' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-label\",\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-data\",\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: key,\n                value: editableStudent[key],\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this) : editableStudent[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"score-heading\",\n              children: \"score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), Object.entries(editableStudent.score || {}).map(([subject, score]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-label\",\n                children: subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-data\",\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: `score.${subject}`,\n                  value: score,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this) : score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, subject, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              className: \"save-button\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditToggle,\n              className: \"edit-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReturn,\n              className: \"return-button\",\n              children: \"Return to List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDelete,\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recommended Colleges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), recommendations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: recommendations.map((college, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: college.college_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Eligibility Percentage: \", college.ELIGIBILITY_PERCENTAGE]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Financial Probablity: \", college.financial_percentage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Academic Probablity: \", college.academic_percentage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 31\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-recommendations\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 67\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No recommendations available yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ProfilePage, \"XIYx5QLUAgbkSNoSSHUXrcDxzYg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","useEffect","image","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","location","navigate","student","state","loading","setLoading","recommendations","setRecommendations","editableStudent","setEditableStudent","isEditing","setIsEditing","maxfee","cgpa","preferredcountry","preferreddegree","score","handleReturn","handleDelete","confirmDelete","window","confirm","fetch","_id","method","alert","error","console","handleEditToggle","handleChange","e","name","value","target","startsWith","_","subject","split","prev","handleSave","log","response","headers","body","JSON","stringify","ok","fetchRecommendations","PROGRAM","TUTION_FEE","parseInt","SCHOLARSHIP_AVAL","PROGRAM_DURATION","COUNTRY","LIVING_COST","ALUMINI_NETWORK","GATE_SCORE","gatescore","GRE_SCORE","grescore","TOEFL_SCORE","toeflscore","IELTS_SCORE","ieltsscore","GMAT_SCORE","gmatscore","SAT_SCORE","satscore","CGPA","DEGREE","MAJOR","ACHIVEMENT","PROJECTS","N_PAPERS","recommendationsData","json","eligible_colleges","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","type","studentname","onChange","Object","keys","map","key","entries","onClick","length","college","index","college_name","ELIGIBILITY_PERCENTAGE","financial_percentage","academic_percentage","_c","$RefreshReg$"],"sources":["C:/HigherStudies/src/StudentProfile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport './StudentProfile.css';\r\nimport image from './Assets/logo.png';\r\n\r\nfunction ProfilePage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { student } = location.state || {};\r\n  const [loading,setLoading] = useState(true)\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [editableStudent, setEditableStudent] = useState(student);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n\r\n  // Initialize variables\r\n  const maxfee = student?.maxfee || 0; // Set a default or pull from student object\r\n  const cgpa = student?.cgpa || 0;\r\n  const preferredcountry = student?.preferredcountry || \"\"; // Default or from student\r\n  const preferreddegree = student?.preferreddegree || \"\"; // Default or from student\r\n  const score = student?.score || {}; // Ensure score exists\r\n\r\n  const handleReturn = () => {\r\n    navigate('/app');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this student?\");\r\n    if (confirmDelete) {\r\n      try {\r\n        await fetch(`http://localhost:5002/api/data/${student._id}`, {\r\n          method: 'DELETE',\r\n        });\r\n        alert('Student deleted successfully.');\r\n        navigate('/app');\r\n      } catch (error) {\r\n        console.error('Error deleting student:', error);\r\n        alert('Failed to delete student.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditToggle = () => {\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('score.')) {\r\n      const [_, subject] = name.split('.');\r\n      setEditableStudent((prev) => ({\r\n        ...prev,\r\n        score: {\r\n          ...prev.score,\r\n          [subject]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setEditableStudent((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    console.log('Saving data:', editableStudent);\r\n    try {\r\n      const response = await fetch(`http://localhost:5002/api/data/${student._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(editableStudent),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Student details updated successfully.');\r\n        setIsEditing(false);\r\n      } else {\r\n        alert('Failed to update student details.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating student:', error);\r\n      alert('Failed to update student.');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchRecommendations = async () => {\r\n      setLoading(true);\r\n      try {\r\n          const response = await fetch('http://localhost:8000/predict-eligible-colleges/', { \r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                PROGRAM: 1,\r\n                TUTION_FEE: parseInt(maxfee, 10), // Convert to integer\r\n                SCHOLARSHIP_AVAL: 1,\r\n                PROGRAM_DURATION: 4,\r\n                COUNTRY: 1, // Example country code\r\n                LIVING_COST: 15000,\r\n                ALUMINI_NETWORK: 1,\r\n                GATE_SCORE: parseInt(score.gatescore, 10),\r\n                GRE_SCORE: parseInt(score.grescore, 10),\r\n                TOEFL_SCORE: parseInt(score.toeflscore, 10),\r\n                IELTS_SCORE: parseInt(score.ieltsscore, 10),\r\n                GMAT_SCORE: parseInt(score.gmatscore, 10),\r\n                SAT_SCORE: parseInt(score.satscore, 10),\r\n                CGPA: 8.5,\r\n                DEGREE: 1, // Example degree code\r\n                MAJOR: 1,\r\n                ACHIVEMENT: 1,\r\n                PROJECTS: 2,\r\n                N_PAPERS: 1,\r\n            }),\r\n          });\r\n          const recommendationsData = await response.json();\r\n          console.log(\"Recommendations Data:\", recommendationsData);  // Log the data\r\n          if (response.ok) {\r\n              setRecommendations(recommendationsData.eligible_colleges);  // Ensure you're accessing the correct property\r\n          } else {\r\n              console.error('Failed to fetch recommendations');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error fetching recommendations:', error);\r\n      }finally{\r\n        setLoading(false);\r\n      }\r\n  };  \r\n    fetchRecommendations();\r\n}, [editableStudent]);\r\n\r\n\r\n  if (!editableStudent) {\r\n    return <div>No student data available.</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <img src={image} alt=\"logo\" />\r\n      </div>\r\n      <div className=\"title\">\r\n        <h2>Higher Studies Students Data</h2>\r\n      </div>\r\n      <div className=\"profile-container\">\r\n          <div className='profile-details-container'>\r\n          <div className=\"profile-header\">\r\n            <h1>{isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                name=\"studentname\"\r\n                value={editableStudent.studentname}\r\n                onChange={handleChange}\r\n              />\r\n            ) : (\r\n              editableStudent.studentname\r\n            )}</h1>\r\n          </div>\r\n          <div className=\"profile-details\">\r\n            {Object.keys(editableStudent).map((key) => (\r\n              key !== 'score' && key !== '_id' && (\r\n                <div key={key} className='detail-row'>\r\n                  <div className=\"detail-label\">{key}</div>\r\n                  <div className=\"detail-data\">\r\n                    {isEditing ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name={key}\r\n                        value={editableStudent[key]}\r\n                        onChange={handleChange}\r\n                      />\r\n                    ) : (\r\n                      editableStudent[key]\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )\r\n            ))}\r\n            <div className=\"score\">\r\n              <h3 className='score-heading'>score</h3>\r\n              {Object.entries(editableStudent.score || {}).map(([subject, score]) => (\r\n                <div key={subject} className='detail-row'>\r\n                  <div className=\"detail-label\">\r\n                    {subject}\r\n                  </div>\r\n                  <div className='detail-data'>\r\n                    {isEditing ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name={`score.${subject}`}\r\n                        value={score}\r\n                        onChange={handleChange}\r\n                      />\r\n                    ) : (\r\n                      score\r\n                    )}\r\n\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className='button'>\r\n            <div>\r\n              {isEditing ? (\r\n                <button onClick={handleSave} className='save-button'>Save</button>\r\n              ) : (\r\n                <button onClick={handleEditToggle} className='edit-button'>Edit</button>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <button onClick={handleReturn} className=\"return-button\">Return to List</button>\r\n            </div>\r\n            <div>\r\n              <button onClick={handleDelete} className='delete-button'>Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"recommendations-container\">\r\n          <div className=\"recommendations\">\r\n              <h3>Recommended Colleges</h3>\r\n              {recommendations.length > 0 ? (\r\n                  <ul>\r\n                      {recommendations.map((college, index) => (\r\n                          <li key={index}>\r\n                              <h4>{college.college_name}</h4>\r\n                              <p>Eligibility Percentage: {college.ELIGIBILITY_PERCENTAGE}</p>\r\n                              <p>Financial Probablity: {college.financial_percentage}</p>\r\n                              <p>Academic Probablity: {college.academic_percentage}</p>\r\n                          </li>\r\n                      ))}\r\n                  </ul>\r\n              ) : (\r\n                  <div className=\"no-recommendations\">{loading ? (<p>Loading...</p>) : (<p>No recommendations available yet.</p>)}</div>\r\n              )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}