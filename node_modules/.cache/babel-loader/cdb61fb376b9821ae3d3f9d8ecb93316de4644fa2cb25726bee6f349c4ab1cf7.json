{"ast":null,"code":"var _jsxFileName = \"C:\\\\HigherStudies\\\\src\\\\InsertPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // You can use axios or fetch for making HTTP requests\nimport image from './Assets/logo.png';\nimport './InsertPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InsertPage() {\n  _s();\n  const [editableStudent, setEditableStudent] = useState({\n    studentid: \"\",\n    studentname: \"\",\n    year: \"\",\n    department: \"\",\n    section: \"\",\n    gender: \"\",\n    emailid: \"\",\n    arrearstatus: \"\",\n    preferreddegree: \"\",\n    preferredcourse: \"\",\n    preferredcountry: \"\",\n    scores: {\n      gatescore: \"\",\n      ieltsscore: \"\",\n      grescore: \"\"\n    }\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"scores.\")) {\n      const subject = name.split(\".\")[1];\n      setEditableStudent(prevState => ({\n        ...prevState,\n        scores: {\n          ...prevState.scores,\n          [subject]: value\n        }\n      }));\n    } else {\n      setEditableStudent(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/data\", editableStudent);\n      if (response.status === 201) {\n        alert(\"Student added successfully!\");\n        // Optionally, reset the form\n        setEditableStudent({\n          studentid: \"\",\n          studentname: \"\",\n          year: \"\",\n          department: \"\",\n          section: \"\",\n          gender: \"\",\n          emailid: \"\",\n          arrearstatus: \"\",\n          preferreddegree: \"\",\n          preferredcourse: \"\",\n          preferredcountry: \"\",\n          scores: {\n            gatescore: \"\",\n            ieltsscore: \"\",\n            grescore: \"\"\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\"There was an error adding the student!\", error);\n      alert(\"Failed to add student.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Students who are Interested in Higher Studies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"studentname\",\n            value: editableStudent.studentname,\n            onChange: handleChange,\n            placeholder: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [Object.keys(editableStudent).map(key => key !== \"scores\" && key !== \"_id\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-label\",\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-data\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: key,\n              value: editableStudent[key],\n              onChange: handleChange,\n              placeholder: `Enter ${key}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"score-heading\",\n            children: \"Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), Object.entries(editableStudent.scores || {}).map(([subject, score]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-label\",\n              children: subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-data\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: `scores.${subject}`,\n                value: score,\n                onChange: handleChange,\n                placeholder: `Enter score for ${subject}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, subject, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"return-button\",\n          onClick: handleSubmit,\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(InsertPage, \"GyfITIHVWCOGG+21ZykOJVntE0c=\");\n_c = InsertPage;\nexport default InsertPage;\nvar _c;\n$RefreshReg$(_c, \"InsertPage\");","map":{"version":3,"names":["React","useState","axios","image","jsxDEV","_jsxDEV","Fragment","_Fragment","InsertPage","_s","editableStudent","setEditableStudent","studentid","studentname","year","department","section","gender","emailid","arrearstatus","preferreddegree","preferredcourse","preferredcountry","scores","gatescore","ieltsscore","grescore","handleChange","e","name","value","target","startsWith","subject","split","prevState","handleSubmit","response","post","status","alert","error","console","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","Object","keys","map","key","entries","score","onClick","_c","$RefreshReg$"],"sources":["C:/HigherStudies/src/InsertPage.js"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\"; // You can use axios or fetch for making HTTP requests\r\nimport image from './Assets/logo.png'\r\nimport './InsertPage.css'\r\n\r\nfunction InsertPage() {\r\n  const [editableStudent, setEditableStudent] = useState({\r\n    studentid:\"\",\r\n    studentname: \"\",\r\n    year: \"\",\r\n    department: \"\",\r\n    section: \"\",\r\n    gender: \"\",\r\n    emailid: \"\",\r\n    arrearstatus: \"\",\r\n    preferreddegree: \"\",\r\n    preferredcourse: \"\",\r\n    preferredcountry: \"\",\r\n    scores: {\r\n        gatescore: \"\",\r\n        ieltsscore:\"\",\r\n        grescore:\"\"\r\n    },\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith(\"scores.\")) {\r\n      const subject = name.split(\".\")[1];\r\n      setEditableStudent((prevState) => ({\r\n        ...prevState,\r\n        scores: {\r\n          ...prevState.scores,\r\n          [subject]: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setEditableStudent((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n        const response = await axios.post(\"http://localhost:5002/api/data\", editableStudent);\r\n      if (response.status === 201) {\r\n        alert(\"Student added successfully!\");\r\n        // Optionally, reset the form\r\n        setEditableStudent({\r\n        studentid:\"\",\r\n          studentname: \"\",\r\n          year: \"\",\r\n          department: \"\",\r\n          section: \"\",\r\n          gender: \"\",\r\n          emailid: \"\",\r\n          arrearstatus: \"\",\r\n          preferreddegree: \"\",\r\n          preferredcourse: \"\",\r\n          preferredcountry: \"\",\r\n          scores: {\r\n            gatescore: \"\",\r\n            ieltsscore:\"\",\r\n            grescore:\"\"\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error adding the student!\", error);\r\n      alert(\"Failed to add student.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <div className=\"header\">\r\n              <img src={image} alt=\"logo\" />\r\n            </div>\r\n            <div className=\"title\">\r\n              <h2>Add Students who are Interested in Higher Studies</h2>\r\n            </div>\r\n        <div className=\"\">\r\n        <div className=\"\">\r\n            <h1>\r\n            <input\r\n                type=\"text\"\r\n                name=\"studentname\"\r\n                value={editableStudent.studentname}\r\n                onChange={handleChange}\r\n                placeholder=\"Student Name\"\r\n            />\r\n            </h1>\r\n        </div>\r\n        <div className=\"\">\r\n            {Object.keys(editableStudent).map(\r\n            (key) =>\r\n                key !== \"scores\" &&\r\n                key !== \"_id\" && (\r\n                <div key={key} className=\"detail-row\">\r\n                    <div className=\"detail-label\">{key}</div>\r\n                    <div className=\"detail-data\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name={key}\r\n                        value={editableStudent[key]}\r\n                        onChange={handleChange}\r\n                        placeholder={`Enter ${key}`}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                )\r\n            )}\r\n            <div className=\"scores\">\r\n            <h3 className=\"score-heading\">Scores</h3>\r\n            {Object.entries(editableStudent.scores || {}).map(\r\n                ([subject, score]) => (\r\n                <div key={subject} className=\"detail-row\">\r\n                    <div className=\"detail-label\">{subject}</div>\r\n                    <div className=\"detail-data\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name={`scores.${subject}`}\r\n                        value={score}\r\n                        onChange={handleChange}\r\n                        placeholder={`Enter score for ${subject}`}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                )\r\n            )}\r\n            </div>\r\n        </div>\r\n        <div className=\"button\">\r\n            <button className=\"return-button\" onClick={handleSubmit}>\r\n                Add Student\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InsertPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}